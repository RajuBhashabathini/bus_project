// @hash v3-88AEAFB706FBA39E3171E85FC1E13F9FF187FBA1
// Automatically generated by ReactJS.NET. Do not edit, your changes will be overridden.
// Version: 5.2.12 (build 29c76c8) with Babel 7.8.7
// Generated at: 3/18/2024 6:40:38 PM
///////////////////////////////////////////////////////////////////////////////
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly)
      symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    keys.push.apply(keys, symbols);
  }
  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(
          target,
          key,
          Object.getOwnPropertyDescriptor(source, key)
        );
      });
    }
  }
  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true,
    });
  } else {
    obj[key] = value;
  }
  return obj;
}

function _extends() {
  _extends =
    Object.assign ||
    function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
  return _extends.apply(this, arguments);
}

const { useEffect, useState, Suspense, useRef, forwardRef } = React;
const {
  TextField,
  Autocomplete,
  RadioGroup,
  FormControlLabel,
  Radio,
  Box,
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  Slide,
  DialogContentText,
  Button,
  Snackbar,
  Alert,
} = MaterialUI;
let version = "1.0.0.3";
const AboutUS = React.lazy(() => import("/Scripts/JS/vrl/AboutUS.jsx"));
const MyProfile = React.lazy(() => import("/Scripts/JS/vrl/MyProfile.jsx"));
const Test = React.lazy(() => import("/Scripts/JS/vrl/Test.jsx"));
const Blog = React.lazy(() => import("/Scripts/JS/vrl/Blog.jsx"));
const BlogDetail = React.lazy(() => import("/Scripts/JS/vrl/BlogDetail.jsx"));
const TermsAndConditions = React.lazy(() =>
  import("/Scripts/JS/vrl/termsandconditions.jsx")
);
const BusCharter = React.lazy(() =>
  import("/Scripts/JS/vrl/BusCharter_NewVRL.jsx")
);
import AvailbleRoutes from "/scripts/js/AvailbleRoutes.jsx";
import Customer_Info from "/scripts/js/VRL/Cust_info_VRL.jsx";
import Customer_Info_final from "/scripts/js/VRL/Cust_info_final_VRL.jsx"; //const ETicket = React.lazy(() => import('/Scripts/JS/VRL/TestTicket_VRL.jsx'));

const ETicket = React.lazy(() => import("/Scripts/JS/ETicketVRL2.jsx"));
const Information = React.lazy(() => import("/Scripts/JS/Information.jsx"));
const CancelStatus = React.lazy(() => import("/Scripts/JS/CancelStatus.jsx"));
const PaymentFailed = React.lazy(() => import("/Scripts/JS/PaymentFailed.jsx"));
const TranStatus = React.lazy(() => import("/Scripts/JS/TranStatus.jsx"));
const ModifyTicket = React.lazy(() =>
  import("/Scripts/JS/ModifyTicket_VRL.jsx")
);
const MyBooking = React.lazy(() => import("/Scripts/JS/MyBooking_VRL.jsx"));
const Login = React.lazy(() => import("/Scripts/JS/Login.jsx"));
const AgentRegistration = React.lazy(() =>
  import("/Scripts/JS/AgentRegistration.jsx")
);
const PrivacyPolicy = React.lazy(() =>
  import("/Scripts/JS/vrl/PrivacyPolicy.jsx")
);
const Feedback = React.lazy(() => import("/Scripts/JS/Feedback.jsx")); 
//const ContactUS = React.lazy(() => import('/Scripts/JS/ContactUS.jsx'));

const ContactUS = React.lazy(() => import("/Scripts/JS/vrl/ContactUs_VRL.jsx"));
const PayOnline = React.lazy(() => import("/Scripts/JS/PayOnline.jsx"));
const Cancellation = React.lazy(() => import("/Scripts/JS/Cancellation.jsx"));
const RefundStatus = React.lazy(() => import("/Scripts/JS/RefundStatus.jsx"));
const Gallery = React.lazy(() => import("/Scripts/JS/Gallary_VRL.jsx"));
const FAQ = React.lazy(() => import("/Scripts/JS/FAQ.jsx"));
const ErrorLog = React.lazy(() => import("/Scripts/JS/ErrorLog.jsx"));
const Downloadapp = React.lazy(() => import("/Scripts/JS/vrl/Downloadapp.jsx"));
const GSTDetails = React.lazy(() => import("/Scripts/JS/vrl/GSTDetails.jsx"));
const CancellationAndRefundPolicy = React.lazy(() =>
  import("/Scripts/JS/vrl/CancellationAndRefundPolicy.jsx")
);
const QuickLinks = React.lazy(() => import("/Scripts/JS/vrl/QuickLinks.jsx"));
const ModifyPickup = React.lazy(() =>
  import("/Scripts/JS/vrl/ModifyPickup.jsx")
);
const FeedbackVRL = React.lazy(() =>
  import("/Scripts/JS/vrl/Feedback_VRL.jsx")
);
const CancelTicket = React.lazy(() =>
  import("/Scripts/JS/vrl/CancelTicket.jsx")
);
const CancelDetails = React.lazy(() =>
  import("/Scripts/JS/vrl/CancelDetails.jsx")
);
const MessagePopup = React.lazy(() =>
  import("/Scripts/JS/vrl/MessagePopup.jsx")
);
const {
  BrowserRouter: Router,
  Switch,
  Route,
  HashRouter,
  Link,
  Redirect,
  useHistory,
} = ReactRouterDOM;
const Transition = forwardRef(function Transition(props, ref) {
  return React.createElement(
    Slide,
    _extends(
      {
        direction: "up",
        ref: ref,
      },
      props
    )
  );
});

function Main_PG() {
  let [compDetails, setcompDetails] = useState({});
  useEffect(() => {
    (async function () {
      CreateLSForPopup();
      await CompanyDetails();
    })();
  }, []);

  const CreateLSForPopup = () => {
    try {
      localStorage.setItem(
        "LSForPopup",
        JSON.stringify({
          id: 1,
        })
      );
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    }
  };

  useEffect(() => {
    if (Object.keys(compDetails).length > 0) {
      loadData();
    }
  }, [compDetails]);

  const CompanyDetails = async () => {
    try {
      let showdata = JSON.parse(localStorage.getItem("cData") || "[]");

      if (_.isEmpty(showdata) != true) {
        setcompDetails(showdata);
        localStorage.removeItem("cData");
      } else {
        await axios
          .post("/DataBinding.aspx/GetCompanyData", {})
          .then(async (response) => {
            if (!response.data.d.isUrlExpired) {
              const data = await JSON.parse(response.data.d.data);
              setcompDetails(data);
            }
          })
          .catch(function (error) {
            console.log(error);
          });
      }

      const element = document.getElementById("divComData");

      if (element != null) {
        element.remove();
      }
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    } finally {
      $(".isLoader").hide();
    }
  };

  const loadData = () => {};

  const insertError = (error, dev_Name) => {
    const id = CreateNewDiv();
    const root1 = ReactDOM.createRoot(document.getElementById(id));
    root1.render(
      React.createElement(
        Suspense,
        null,
        React.createElement(ErrorLog, {
          CustomErrorObj: {
            errorObj: error,
            developerName: dev_Name,
          },
        })
      )
    );
    RemoveDiv(id);
  };

  return React.createElement(
    React.Fragment,
    null,
    Object.keys(compDetails).length > 0 &&
      React.createElement(
        React.Fragment,
        null,
        React.createElement(
          HashRouter,
          null,
          React.createElement(Header, {
            compDetails: compDetails,
          }),
          React.createElement(Route, {
            path: "/",
            exact: true,
            render: (props) =>
              React.createElement(Index, {
                compDetails: compDetails,
              }),
          }),
          React.createElement(Footer, {
            compDetails: compDetails,
          })
        )
      )
  );
}

const root1 = ReactDOM.createRoot(document.getElementById("demo"));
root1.render(React.createElement(Main_PG, null));

const Index = (props) => {
  const { compDetails } = props;
  let currentDate = dayjs(dayjs(), "YYYY-MM-DD").format("YYYY-MM-DD");
  let [cityObj, setcityObj] = useState({
    fromCity: {
      value: 0,
      label: "",
    },
    toCity: {
      value: 0,
      label: "",
    },
    fromCity1: {
      value: 0,
      label: "",
    },
    toCity1: {
      value: 0,
      label: "",
    },
    fromCity2: {
      value: 0,
      label: "",
    },
    toCity2: {
      value: 0,
      label: "",
    },
    tripType: 0,
    //  0 single, 1 return, 2 multi
    anotherPair: 0,
    topDestination: -1,
  });
  let [tripType, setTripType] = useState(1);
  let [fromDate, setfromDate] = useState("");
  let [todate, settodate] = useState("");
  let [cityListObj, setcityListObj] = useState([]);
  let [cityList, setcityList] = useState([]);
  let [toCityList, setToCityList] = useState([]);
  let [dlgMsg, setdlMsg] = useState({
    open: false,
    msg: "",
    type: 0,
  });
  let [displayPopup, setDisplayPopup] = useState(false);
  let [journyDate1, setJournyDate1] = useState("");
  let [journyDate2, setJournyDate2] = useState("");
  let [fromCityList, setFromCityList] = useState([]);
  let [popularToCity, setPopularToCity] = useState();
  let imgurl = "https://css.cdn.itspl.net/cdn/B2C_RT/VRL/Images/CityImage/";
  let staticImgUrl = "/IIPL/images/";
  let Topcitylist = [
    {
      ToCityID: 806,
      ToCityName: "Mangalore",
      ImgURL: staticImgUrl + "mangalore.png",
      AnimationImgURL:
        "https://lottie.host/embed/09e58347-639a-4f40-b19f-2bab5e17f841/YMuNPzAvhJ.json",
    },
    {
      ToCityID: 718,
      ToCityName: "Pune",
      ImgURL: staticImgUrl + "pune.png",
      AnimationImgURL:
        "https://lottie.host/embed/c267c130-1fcf-4d1e-b871-06dc2679ff36/fp3nTyfSk1.json",
    },
    {
      ToCityID: 2318,
      ToCityName: "Bangalore",
      ImgURL: staticImgUrl + "bangalore.png",
      AnimationImgURL:
        "https://lottie.host/embed/a0d5004f-ad27-40e4-90aa-cfa8e605b1e7/WIJeTWiBai.json",
    },
    {
      ToCityID: 703,
      ToCityName: "Mumbai",
      ImgURL: staticImgUrl + "mumbai.png",
      AnimationImgURL:
        "https://lottie.host/embed/b5cff5d0-989b-498b-bcaf-1c1075a96290/Mz3u5dozYd.json",
    },
    {
      ToCityID: 3501,
      ToCityName: "Belagavi",
      ImgURL: staticImgUrl + "belgavi.png",
      AnimationImgURL:
        "https://lottie.host/embed/b456ddd3-6adf-4520-a169-b7d0bbc639fd/g1CcklZVld.json",
    },
    {
      ToCityID: 7298,
      ToCityName: "Hyderabad",
      ImgURL: staticImgUrl + "hyderabad.png",
      AnimationImgURL:
        "https://lottie.host/embed/7f78899f-18ad-48af-8c78-dbd7b4c67875/0xbHDs5xhH.json",
    },
    {
      ToCityID: 3507,
      ToCityName: "Hubballi",
      ImgURL: staticImgUrl + "hubballi.png",
      AnimationImgURL:
        "https://lottie.host/embed/880cca90-d370-471b-a7b1-6d7f6cb33a78/OAhnNHHI7z.json",
    },
    {
      ToCityID: 2319,
      ToCityName: "Goa",
      ImgURL: staticImgUrl + "goa.png",
      AnimationImgURL:
        "https://lottie.host/embed/84fb666b-22d6-4450-a7e2-70d28f93f82d/FRrMz8oavr.json",
    },
    {
      ToCityID: 1,
      ToCityName: "Ahmedabad",
      ImgURL: staticImgUrl + "ahmedabad.png",
      AnimationImgURL:
        "https://lottie.host/embed/989f42a3-8ea7-40de-8b86-22999ce96f18/mNocxSjTag.json",
    },
    {
      ToCityID: 2245,
      ToCityName: "Indore",
      ImgURL: staticImgUrl + "indore.png",
      AnimationImgURL:
        "https://lottie.host/embed/adf184b2-18de-4937-aaf4-d54fcbbee9f8/TOjJof6QLE.json",
    },
    {
      ToCityID: 811,
      ToCityName: "Mysore",
      ImgURL: staticImgUrl + "mysore.png",
      AnimationImgURL:
        "https://lottie.host/embed/b1ee4bff-f6e3-4e98-a2a4-2f8faae383f0/zMJYhVGx2Y.json",
    },
    {
      ToCityID: 704,
      ToCityName: "Nagpur",
      ImgURL: staticImgUrl + "nagpur.png",
      AnimationImgURL:
        "https://lottie.host/embed/c5c1ab40-3a4f-41a2-b119-66670352f703/DJ0UpVX9Hl.json",
    },
    {
      ToCityID: 2157,
      ToCityName: "Shirdi",
      ImgURL: staticImgUrl + "shirdi.png",
      AnimationImgURL:
        "https://lottie.host/embed/fb41c78c-6b02-425a-9f7d-39be1c377dcd/bnuSLPETKh.json",
    },
  ];
  let QuickSearch = [
    {
      FromCityID: 1,
      FromCityName: "Ahmedabad",
      ToCityID: 757,
      ToCityName: "Bengaluru",
    },
    {
      FromCityID: 703,
      FromCityName: "Mumbai",
      ToCityID: 2319,
      ToCityName: "Goa",
    },
    {
      FromCityID: 703,
      FromCityName: "Mumbai",
      ToCityID: 757,
      ToCityName: "Bengaluru",
    },
    {
      FromCityID: 2319,
      FromCityName: "Goa",
      ToCityID: 757,
      ToCityName: "Bengaluru",
    },
  ];
  let [cityPairs, setCityPairs] = useState({
    recentCity: [],
    topDestination: Topcitylist,
  });
  let [topTenCust, setTopTenCust] = useState([]);
  let [redirectAvlRt, setRedirectAvlRt] = useState(false);
  let Journydate = useRef(currentDate);

  const datechange = (id, value) => {
    if (id == "txtFromDate") {
      if (value != "") {
        setfromDate(value);
      } else {
        let today = _.todayDate("DD-MM-YYYY");

        setfromDate(today);
        $("#txtFromDate").val(today);
      }
    } else if (id == "txtToDate") {
      settodate(value);
    } else if (id == "txtFromDate1") {
      setJournyDate1(value);
    } else if (id == "txtFromDate2") {
      setJournyDate2(value);
    } else if ((id = "txtFromDate_popular")) {
      if (value != "") {
        setfromDate(value);
        $("#txtFromDate_popular").val(value);
      }
    }
  };

  let [open, setOpen] = useState(false);
  let [popupImages, setpopupImages] = useState([]);
  let [offerImages, setOfferImages] = useState({});
  let [isCopied, setIsCopied] = useState(false);
  let [couponDetails, setCouponDetails] = useState([]);
  let [blogData, setBlogData] = useState([]);
  useEffect(() => {
    (async function () {
      await getMainPage_Details();
      await loadDataindx();
      setFromDate();
    })();
  }, []);

  const getLSForPopup = () => {
    let showdata = JSON.parse(localStorage.getItem("LSForPopup") || "[]");

    if (_.isEmpty(showdata) != true) {
      display_Popup();
      localStorage.removeItem("LSForPopup");
    }
  };

  const display_Popup = () => {
    setDisplayPopup(true);
  };

  const Close_Popup = () => {
    setDisplayPopup(false);
  };

  function getMobileOperatingSystem() {
    var userAgent = navigator.userAgent || navigator.vendor || window.opera;

    if (/windows phone/i.test(userAgent)) {
      return "Windows Phone";
    }

    if (/android/i.test(userAgent)) {
      return "Android";
    }

    if (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream) {
      return "iOS";
    }

    return "unknown";
  }

  const getMainPage_Details = async () => {
    try {
      // $(".isLoader").show();
      await axios
        .post("/DataBinding.aspx/GetMainPage_Details", {})
        .then(async (response) => {
          $(".isLoader").hide();

          if (response.data.d.data != "") {
            let data = await JSON.parse(response.data.d.data);

            if (data.cityList.length > 0) {
              setcityListObj(data.cityList);
              let options = []; //let fCity = _.uniqBy(data.cityList, 'FromCity');
              //fCity.map(function (option, index) {
              //    let obj = { value: option.FromCityID, label: option.FromCity, key: index, Pickup: option.Pickup }
              //    options.push(obj);
              //});

              data.cityList.map(function (option, index) {
                let obj = {
                  value: option.CM_CityID,
                  label: option.CM_CityName,
                  key: index,
                  Pickup: option.IsPickup,
                };
                options.push(obj);
              });
              setcityList(options);
            }

            cityPairs.topDestination = Topcitylist;
            setCityPairs((cityPairs) => _objectSpread({}, cityPairs));

            if (data.topTenCust.length > 0) {
              setTopTenCust(data.topTenCust);
            }

            if (data.DisplayPopup.length > 0) {
              setpopupImages(data.DisplayPopup);
            } //if (data.OfferImages.length > 0) {
            //    let OfferFilter = _.filter(data.OfferImages, function (o) { return o.DS_SchemeURL != '' });
            //    setOfferImages(OfferFilter);
            //}

            if (data.OfferImages.length > 0) {
              couponDetails = data.OfferImages;
              setCouponDetails(couponDetails);
            }

            if (data.BlogDetails.length > 0) {
              blogData = data.BlogDetails;
              setBlogData(blogData);
            }
          }
        })
        .catch(function (error) {
          console.log(error);
        });
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    } finally {
      $(".isLoader").hide();
    }
  };

  const setFromDate = () => {
    try {
      let today = _.todayDate("DD-MM-YYYY");

      setfromDate(today);
      $("#txtFromDate").val(today);
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    }
  };

  const ddlCityChange = async (e, n, name) => {
    try {
      cityObj[name] = n;

      if (name == "fromCity") {
        if (n != null && n != undefined && n.value > 0) {
          cityObj.toCity = {
            value: 0,
            label: "",
          };
          await setToCity_Obj(n.value, n.label);
          setOpen(true);
          $("#ToCity").focus();
        }
      } else if (name == "toCity") {
        $("#txtFromDate").focus();
      }

      setcityObj((cityObj) => _objectSpread({}, cityObj));
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    }
  };

  const setToCity_Obj = (value, CityName) => {
    try {
      //let _toCity = _.filter(cityListObj, { 'FromCityID': value });
      //let toCity = _.uniqBy(_toCity, 'ToCity');
      let options = []; //toCity.map(function (option, index) {
      //    let obj = { value: option.ToCityID, label: option.ToCity, key: index, Pickup: option.Pickup }
      //    options.push(obj);
      //});

      let _toCity = _.reject(cityListObj, {
        CM_CityID: value,
        CM_CityName: CityName,
      });

      _toCity.map(function (option, index) {
        let obj = {
          value: option.CM_CityID,
          label: option.CM_CityName,
          key: index,
          Pickup: 0,
        };
        options.push(obj);
      });

      setToCityList(options);
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    }
  }; //For Set From City For Popular Destinations

  const setTopFromCity_Obj = (value) => {
    try {
      //let _fromCity = _.filter(cityListObj, { 'ToCityID': value });
      //let fromCity = _.uniqBy(_fromCity, 'FromCity');
      let options = []; //fromCity.map(function (option, index) {
      //    let obj = { value: option.FromCityID, label: option.FromCity, key: index, Pickup: option.Pickup }
      //    options.push(obj);
      //});

      cityListObj.map(function (option, index) {
        let obj = {
          value: option.CM_CityID,
          label: option.CM_CityName,
          key: index,
          Pickup: 0,
        };
        options.push(obj);
      });
      setFromCityList(options);
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    }
  }; //Change Event For Top Destination DropDown

  const ddlTopDestinationCityChange = async (e, n, name) => {
    try {
      cityObj[name] = n;
      cityObj.toCity = {
        value: popularToCity.ToCityID,
        label: popularToCity.ToCityName,
      };
      setcityObj((cityObj) => _objectSpread({}, cityObj));
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    }
  };

  const loadDataindx = () => {
    try {
      var date = new Date();
      $(".txtDateTime")
        .datepicker({
          format: "dd-mm-yyyy",
          autoclose: 1,
          todayHighlight: 1,
          startDate: date,
          endDate: "+6m",
        })
        .on("change", function (e) {
          let id = e.currentTarget.id;
          let value = e.currentTarget.value;
          datechange(id, value);
        });
      const carouselButtons = document.querySelectorAll("[data-button]");
      carouselButtons.forEach((button) => {
        button.addEventListener("click", () => {
          const offset = button.dataset.carouselButton === "left" ? -1 : 1;
          const slides = button
            .closest("[data-carousel]")
            .querySelector("[data-slides]");
          const activeSlide = slides.querySelector("[data-active]");
          let newIndex = [...slides.children].indexOf(activeSlide) + offset;
          if (newIndex < 0) newIndex = slides.children.length - 1;
          if (newIndex >= slides.children.length) newIndex = 0;
          delete activeSlide.dataset.active;
          slides.children[newIndex].dataset.active = true;
        });
      });
      $(document).ready(function () {
        var tabWrapper = $("#tab-block"),
          tabMnu = tabWrapper.find(".tab-mnu  li"),
          tabContent = tabWrapper.find(".tab-cont > .tab-pane");
        tabContent.not(":first-child").hide();
        tabMnu.each(function (i) {
          $(this).attr("data-tab", "tab" + i);
        });
        tabContent.each(function (i) {
          $(this).attr("data-tab", "tab" + i);
        });
        tabMnu.click(function () {
          var tabData = $(this).data("tab");
          tabWrapper.find(tabContent).hide();
          tabWrapper
            .find(tabContent)
            .filter("[data-tab=" + tabData + "]")
            .show();
        });
        $(".tab-mnu > li").click(function () {
          var before = $(".tab-mnu li.active");
          before.removeClass("active");
          $(this).addClass("active");
        });
      });
      $(".scarousel-main").owlCarousel({
        items: 1,
        loop: true,
        autoplay: true,
        autoplayTimeout: 3500,
        margin: 10,
        nav: true,
        dots: false,
        navText: [
          '<span className="fas fa-chevron-left fa-2x"></span>',
          '<span className="fas fa-chevron-right fa-2x"></span>',
        ],
        responsive: {
          1899: {
            margin: 30,
          },
          1920: {
            items: 1,
          },
        },
      });
      $(".carousel-route").owlCarousel({
        items: 4,
        loop: true,
        autoplay: true,
        autoplayTimeout: 3500,
        autoplayHoverPause: true,
        margin: 10,
        nav: true,
        dots: false,
        navText: [
          '<span className="fas fa-chevron-left fa-2x"></span>',
          '<span className="fas fa-chevron-right fa-2x"></span>',
        ],
        responsive: {
          320: {
            items: 2.3,
            margin: 15,
          },
          479: {
            items: 2.3,
            margin: 15,
          },
          480: {
            items: 2,
            margin: 15,
          },
          529: {
            items: 2,
            margin: 15,
          },
          530: {
            items: 2.5,
            margin: 15,
          },
          639: {
            items: 2.5,
            margin: 15,
          },
          640: {
            items: 3,
            margin: 15,
          },
          991: {
            items: 3,
            margin: 15,
          },
          992: {
            items: 4,
            margin: 15,
          },
          1899: {
            margin: 30,
            items: 4,
          },
          1920: {
            items: 4,
          },
        },
      });
      $(".carousel-main").owlCarousel({
        items: 2.5,
        loop: true,
        autoplay: true,
        autoplayTimeout: 3500,
        margin: 10,
        nav: true,
        dots: false,
        navText: [
          '<span className="fas fa-chevron-left fa-2x"></span>',
          '<span className="fas fa-chevron-right fa-2x"></span>',
        ],
        responsive: {
          300: {
            items: 1.1,
            margin: 0,
          },
          439: {
            items: 1.1,
            margin: 0,
          },
          440: {
            items: 1.2,
            margin: 0,
          },
          509: {
            items: 1.2,
            margin: 0,
          },
          510: {
            items: 1.3,
            margin: 0,
          },
          579: {
            items: 1.3,
            margin: 0,
          },
          580: {
            items: 1.4,
            margin: 0,
          },
          709: {
            items: 1.4,
            margin: 0,
          },
          710: {
            items: 1.6,
            margin: 0,
          },
          809: {
            items: 1.6,
            margin: 0,
          },
          810: {
            items: 1.8,
            margin: 0,
          },
          879: {
            items: 1.8,
            margin: 0,
          },
          880: {
            items: 2,
            margin: 15,
          },
          991: {
            items: 2,
            margin: 15,
          },
          992: {
            items: 2.2,
            margin: 15,
          },
          1099: {
            items: 2.2,
            margin: 15,
          },
          1100: {
            items: 2.3,
            margin: 15,
          },
          1159: {
            items: 2.3,
            margin: 15,
          },
          1160: {
            items: 2.4,
            margin: 15,
          },
          1200: {
            items: 2.4,
            margin: 15,
          },
          1899: {
            margin: 30,
          },
          1920: {
            items: 2.5,
          },
        },
      });
      $(".carousel-main2").owlCarousel({
        items: 2.2,
        loop: true,
        autoplay: true,
        autoplayTimeout: 3500,
        margin: 10,
        nav: true,
        dots: false,
        navText: [
          '<span className="fas fa-chevron-left fa-2x"></span>',
          '<span className="fas fa-chevron-right fa-2x"></span>',
        ],
        responsive: {
          320: {
            items: 1.3,
          },
          480: {
            items: 1.3,
          },
          569: {
            items: 1.3,
          },
          570: {
            items: 1.5,
          },
          639: {
            items: 1.5,
          },
          640: {
            items: 1.2,
          },
          799: {
            items: 1.2,
          },
          800: {
            items: 1.5,
          },
          990: {
            items: 1.5,
          },
          991: {
            items: 1.9,
            margin: 15,
          },
          1200: {
            items: 1.9,
            margin: 15,
          },
          1899: {
            margin: 30,
          },
          1920: {
            items: 2.2,
          },
        },
      });
    } catch (error) {
      insertError(error, "Darshan Goswami");
    } finally {
      $(".isLoader").hide();
    }
  };

  const openFile = (evt, fileName) => {
    var i, tabcontent, tablinks;
    tabcontent = document.getElementsByClassName("tabcontent");

    for (i = 0; i < tabcontent.length; i++) {
      tabcontent[i].style.display = "none";
    }

    tablinks = document.getElementsByClassName("tablinks");

    for (i = 0; i < tablinks.length; i++) {
      tablinks[i].className = tablinks[i].className.replace(" active", "");
    }

    document.getElementById(fileName).style.display = "block";
    evt.currentTarget.className += " active";
    document.getElementById("tabarea").click();
  };

  function Loadindx() {
    loadDataindx();
  }

  const tripTypeChange = (type) => {
    try {
      cityObj.tripType = type;

      if (type != 1) {
        settodate = "";
      }

      if (type != 2) {
        cityObj.fromCity1 = {
          value: 0,
          label: "",
        };
        cityObj.toCity1 = {
          value: 0,
          label: "",
        };
        cityObj.fromCity2 = {
          value: 0,
          label: "",
        };
        cityObj.toCity2 = {
          value: 0,
          label: "",
        };
        cityObj.anotherPair = 0;
        setJournyDate1("");
        setJournyDate2("");
      }

      setcityObj((cityObj) => _objectSpread({}, cityObj));

      if (type != 0) {
      }
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    } finally {
    }
  };

  const addRemoveMultiCity = (type) => {
    try {
      cityObj.anotherPair = type;

      if (type == 0) {
        cityObj.fromCity2 = {
          value: 0,
          label: "",
        };
        cityObj.toCity2 = {
          value: 0,
          label: "",
        };
        setJournyDate2("");
      } else {
        loadDataindx();
      }

      setcityObj((cityObj) => _objectSpread({}, cityObj));
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    } finally {
    }
  };

  const searchRoutes = async (e) => {
    try {
      const city_Obj = _.cloneDeep(cityObj);

      let isValid = Validation(city_Obj);

      if (isValid) {
        let fDate = "",
          tDate = "";
        fDate = fromDate;
        tDate = todate;
        const data = {
          fromCityID: cityObj.fromCity.value,
          toCityID: cityObj.toCity.value,
          fromCityName: cityObj.fromCity.label,
          toCityName: cityObj.toCity.label,
          jdate: fDate,
          jdateR: tDate,
          isBindReturnRoute: 0,
          redirectUrl: "",
          msg: "",
          fromCityID1: cityObj.fromCity1.value,
          toCityID1: cityObj.toCity1.value,
          fromCityName1: cityObj.fromCity1.label,
          toCityName1: cityObj.toCity1.label,
          journeyDate1: journyDate1,
          tripType: cityObj.tripType,
          fromCityID2: cityObj.fromCity2.value,
          toCityID2: cityObj.toCity2.value,
          fromCityName2: cityObj.fromCity2.label,
          toCityName2: cityObj.toCity2.label,
          journeyDate2: journyDate2,
        };
        await axios
          .post("/DataBinding.aspx/Bind_AvailableRoutes", {
            SRI: data,
          })
          .then(async (response) => {
            if (response.data.d.isUrlExpired == false) {
              if (response.data.d.data != "") {
                if (response.data.d.data.includes("AvailebleRoutes")) {
                  setRedirectAvlRt(true);
                }
              }
            }
          })
          .catch(function (error) {
            console.log(error);
          });
      }
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    } finally {
      $(".isLoader").hide();
    }
  };

  const Validation = (cityObjCp) => {
    let isValid = true;

    try {
      if (cityObjCp.fromCity != null && cityObjCp.fromCity.value > 0) {
        $("#spanFromCity").hide();
      } else {
        alertBox_Main_Page("Please Select From City", 2);
        $("#FromCity").focus();
        isValid = false;
      }

      if (cityObjCp.toCity != null && cityObjCp.toCity.value > 0) {
        $("#spanToCity").hide();

        if (
          cityObjCp.fromCity != null &&
          cityObjCp.fromCity.value > 0 &&
          cityObjCp.toCity.value == cityObjCp.fromCity.value
        ) {
          $("#ToCity").focus();
          $("#spanInvToCity").show();
          isValid = false;
        } else {
          if (
            cityObjCp.fromCity != null &&
            cityObjCp.toCity.value == cityObjCp.fromCity.value
          ) {
            alertBox_Main_Page("Invalid Destination Selection", 2);
            $("#FromCity").focus();
            isValid = false;
          }
        }
      } else {
        if (cityObjCp.fromCity.value > 0) {
          $("#spanInvToCity").hide();
          alertBox_Main_Page("Invalid Destination Selection", 2);
          $("#ToCity").focus();
          isValid = false;
        }
      }

      if (fromDate != "" && fromDate != null && fromDate != undefined) {
        $("#spanFromDate").hide();
        const now = dayjs(dayjs().format("YYYY-MM-DD"));
        let tm = dayjs(fromDate, "DD-MM-YYYY").format("DD-MM-YYYY");
        let valid = dayjs(tm, "DD-MM-YYYY", true).isValid();
        const date = dayjs(dayjs(fromDate, "DD-MM-YYYY").format("YYYY-MM-DD"));
        let diff = date.diff(now);

        if (diff < 0 || isNaN(diff) || valid == false || tm != fromDate) {
          isValid = false;
          alertBox_Main_Page("Please Select Valid Journy Date", 2);
        } else {
          $("#spanValidFromDate").hide();
        }
      } else {
        isValid = false;
        alertBox_Main_Page("Please Select Journy Date", 2);
        $("#txtFromDate").focus();
        $("#spanValidFromDate").hide();
      }

      if (todate != "" && todate != null && todate != undefined) {
        const now = dayjs(dayjs(fromDate, "DD-MM-YYYY").format("YYYY-MM-DD"));
        let tm = dayjs(todate, "DD-MM-YYYY").format("DD-MM-YYYY");
        let valid = dayjs(tm, "DD-MM-YYYY", true).isValid();
        const date = dayjs(dayjs(todate, "DD-MM-YYYY").format("YYYY-MM-DD"));
        let diff = date.diff(now);

        if (diff < 0 || isNaN(diff) || valid == false || tm != todate) {
          isValid = false;
          alertBox_Main_Page("Please Select Valid Journy Date", 2);
        } else {
          $("#spanValidToDate").hide();
        }
      } else {
        $("#spanValidToDate").hide();
      }
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    }

    return isValid;
  };

  const dynamicData = {
    //img1: compDetails?.companyData?.DataFolder + "/images/site/Logo.png?d=0.0",
    img1:
      compDetails?.companyData?.CDNDataFolder +
      "/images/site/Logo.png?d=" +
      version,
    slider:
      compDetails?.companyData?.CDNDataFolder +
      "/images/slider.webp?d=" +
      version,
    slider1:
      compDetails?.companyData?.CDNDataFolder +
      "/images/Slider_01.webp?d=" +
      version,
    slider2:
      compDetails?.companyData?.CDNDataFolder +
      "/images/Slider_02.webp?d=" +
      version,
    slider3:
      compDetails?.companyData?.CDNDataFolder +
      "/images/Slider_03.webp?d=" +
      version,
    Discount_Count:
      compDetails?.companyData?.CDNDataFolder +
      "/images/Discount_Count.png?d=" +
      version,
    Offer_Card01:
      compDetails?.companyData?.CDNDataFolder +
      "/images/Offer_Card01.webp?d=" +
      version,
    Offer_Card02:
      compDetails?.companyData?.CDNDataFolder +
      "/images/Offer_Card02.webp?d=" +
      version,
    Offer_Card03:
      compDetails?.companyData?.CDNDataFolder +
      "/images/Offer_Card03.webp?d=" +
      version,
    Testimonial_User:
      compDetails?.companyData?.CDNDataFolder +
      "/images/Testimonial_User.png?d=" +
      version,
    Mobile_QR:
      compDetails?.companyData?.CDNDataFolder +
      "/images/Mobile_QR.webp?d=" +
      version,
    Playstore_Button:
      compDetails?.companyData?.CDNDataFolder +
      "/images/Playstore_Button.png?d=" +
      version,
    DiscountPopup:
      compDetails?.companyData?.DataFolder +
      "/images/VRLRoutePopup.png?d=" +
      version,
    sliderbus:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/sliderbus01.png?d=" +
      version,
    delhi:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/delhiroute.jpg?d=" +
      version,
    goa:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/goaroute.jpg?d=" +
      version,
    bangalore:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/bangloreroute.jpg?d=" +
      version,
    ahmedabadroute:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/ahmedabadroute.jpg?d=" +
      version,
    mumbairoute:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/mumbairoute.jpg?d=" +
      version,
    reviewsicon:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/reviewsicon.png?d=" +
      version,
    bdpointroute:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/bdpointroute.svg?d=" +
      version,
    superbus01:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/superbus01.png?d=" +
      version,
    superbus02:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/superbus02.png?d=" +
      version,
    superbus03:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/superbus03.png?d=" +
      version,
    appqrscanner:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/appqrscanner.png?d=" +
      version,
    application:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/application.png?d=" +
      version,
    mobile_app:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/mobile_app.png?d=" +
      version,
    m_explore1:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/m_explore1.png?d=" +
      version,
    m_explore2:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/m_explore2.png?d=" +
      version,
    m_explore3:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/m_explore3.png?d=" +
      version,
    superbuslogo:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/superbuslogo.png?d=" +
      version,
    google_play:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/google-play.png?d=" +
      version,
    google_App:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/google-app.png?d=" +
      version,
    easeMyTripLogo:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/EaseMyTrip_Logo.png?d=" +
      version,
  };

  const mouseover = (id) => {
    document.getElementById(id).stop();
  };

  const mouseout = (id) => {
    document.getElementById(id).start();
  };

  const Swap_City = (from, to) => {
    try {
      let obj = _.cloneDeep(cityObj);

      if (
        obj[from] != null &&
        obj[to] != null &&
        obj[from] != undefined &&
        obj[to] != undefined &&
        obj[from].value > 0 &&
        obj[to].value > 0
      ) {
        [obj[from], obj[to]] = [obj[to], obj[from]];
        setcityObj(obj);
      } else {
        alertBox_Main_Page("Please Select City", 2);
      }
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    } finally {
      $(".isLoader").hide();
    }
  };

  const scroll = () => {
    try {
      _.autoScrollDown("VRL_Header", 100, 0);
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    } finally {
    }
  };

  const openTopDestination = async (index, obj) => {
    try {
      $("#popup3").addClass("openpop");
      popularToCity = obj;
      setPopularToCity(popularToCity);
      await setTopFromCity_Obj(obj.ToCityID);
      $("#txtFromDate_popular").val(fromDate);
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    } finally {
    }
  };

  const SearchPopularRoute = async () => {
    try {
      if (cityObj.fromCity == null || cityObj.fromCity.value == 0) {
        alertBox_Main_Page("Plzz Select From City", 2);
      } else if (fromDate == "" && fromDate == null && fromDate == undefined) {
        alertBox_Main_Page("Plzz Select Journay Date", 2);
      } else {
        await searchRoutes();
      }
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    } finally {
    }
  };

  const handleClose = () => {
    setdlMsg({
      open: false,
      msg: "",
      type: 0,
    });
  };

  const alertBox_Main_Page = (mesage, type) => {
    setdlMsg({
      open: true,
      msg: mesage,
      type: type,
    });
    React.createElement(
      Dialog,
      {
        open: dlgMsg.open,
        TransitionComponent: Transition,
        keepMounted: true,
        maxWidth: "xl",
        onClose: handleClose,
        "aria-describedby": "alert-dialog-slide-description",
        className: "termsdatapart",
      },
      React.createElement(
        DialogContent,
        null,
        React.createElement(
          Suspense,
          null,
          React.createElement(MessagePopup, {
            Msg: dlgMsg,
            close: handleClose,
          })
        )
      )
    );
  };

  const TocityChange = (data) => {
    try {
      cityObj.toCity = data;
      setcityObj((cityObj) => _objectSpread({}, cityObj));
      searchRoutes();
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    } finally {
    }
  };

  const tocitycom = {
    cityList: toCityList,
    TocityChange: TocityChange,
  };
  const chldIndx = {
    compDetails: compDetails,
    topTenCust: topTenCust,
    BlogData: blogData,
  };
  const popupData = {
    close: Close_Popup,
    images: popupImages,
  };

  const OpenPOProute = () => {
    $("#popup3").addClass("openpop");
  };

  const ClosePoproute = () => {
    $("#popup3").removeClass("openpop");
  };

  const update_TripType = async (e) => {
    try {
      if (e.target.value == 1) {
        tripTypeChange(0);
      } else if (e.target.value == 2) {
        tripTypeChange(1);
      }

      setTripType(e.target.value);
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    }
  };

  const SelectRouteThroughQuickLinks = async (obj) => {
    try {
      cityObj.fromCity = {
        value: obj.FromCityID,
        label: obj.FromCityName,
      };
      cityObj.toCity = {
        value: obj.ToCityID,
        label: obj.ToCityName,
      };
      setcityObj((cityObj) => _objectSpread({}, cityObj));
      searchRoutes();
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    } finally {
    }
  };

  const insertError = (error, dev_Name) => {
    const id = CreateNewDiv();
    const root1 = ReactDOM.createRoot(document.getElementById(id));
    root1.render(
      React.createElement(
        Suspense,
        null,
        React.createElement(ErrorLog, {
          CustomErrorObj: {
            errorObj: error,
            developerName: dev_Name,
          },
        })
      )
    );
    RemoveDiv(id);
  };

  if (redirectAvlRt) {
    return React.createElement(Redirect, {
      to: "/AvailbleRoutes",
    });
  }

  const CopyImageClick = (ImageSchemeText) => {
    navigator.clipboard
      .writeText(ImageSchemeText)
      .then(() => {
        setIsCopied(true);
      })
      .catch((error) => {
        console.error("Error copying to clipboard:", error);
      });
    alertBox_Main_Page("Copied To Clipboard Successfully !", 1);
  }; //For Load Coupon Slider

  const _BlogLoadFunction = () => {
    $(".scarousel-main").owlCarousel({
      items: 1,
      loop: true,
      autoplay: true,
      autoplayTimeout: 3500,
      margin: 10,
      nav: true,
      dots: false,
      navText: [
        '<span className="fas fa-chevron-left fa-2x"></span>',
        '<span className="fas fa-chevron-right fa-2x"></span>',
      ],
      responsive: {
        1899: {
          margin: 30,
        },
        1920: {
          items: 1,
        },
      },
    });
    $(".carousel-main").owlCarousel({
      items: 2.5,
      loop: true,
      autoplay: true,
      autoplayTimeout: 3500,
      margin: 10,
      nav: true,
      dots: false,
      navText: [
        '<span className="fas fa-chevron-left fa-2x"></span>',
        '<span className="fas fa-chevron-right fa-2x"></span>',
      ],
      responsive: {
        300: {
          items: 1.1,
          margin: 0,
        },
        439: {
          items: 1.1,
          margin: 0,
        },
        440: {
          items: 1.2,
          margin: 0,
        },
        509: {
          items: 1.2,
          margin: 0,
        },
        510: {
          items: 1.3,
          margin: 0,
        },
        579: {
          items: 1.3,
          margin: 0,
        },
        580: {
          items: 1.4,
          margin: 0,
        },
        709: {
          items: 1.4,
          margin: 0,
        },
        710: {
          items: 1.6,
          margin: 0,
        },
        809: {
          items: 1.6,
          margin: 0,
        },
        810: {
          items: 1.8,
          margin: 0,
        },
        879: {
          items: 1.8,
          margin: 0,
        },
        880: {
          items: 2,
          margin: 15,
        },
        991: {
          items: 2,
          margin: 15,
        },
        992: {
          items: 2.2,
          margin: 15,
        },
        1099: {
          items: 2.2,
          margin: 15,
        },
        1100: {
          items: 2.3,
          margin: 15,
        },
        1159: {
          items: 2.3,
          margin: 15,
        },
        1160: {
          items: 2.4,
          margin: 15,
        },
        1200: {
          items: 2.4,
          margin: 15,
        },
        1899: {
          margin: 30,
        },
        1920: {
          items: 2.5,
        },
      },
    });
  }; //For CouponCode

  function _Loadblog() {
    _BlogLoadFunction();
  } //For Get Data For Coupon Code

  const getCouponCodeDetails = async () => {
    await axios
      .post("/DataBinding.aspx/GetDefaultCouponCodeDetails", {})
      .then(async (response) => {
        if (!response.data.d.isUrlExpired) {
          if (response.data.d.data != "") {
            let data = JSON.parse(response.data.d.data);

            if (data.Status == 1) {
              couponDetails = data.data;
              setCouponDetails(couponDetails);
            }
          }
        }
      });
  };

  return React.createElement(
    React.Fragment,
    null,
    displayPopup &&
      popupImages.length > 0 &&
      React.createElement(Popup4, {
        popupData: popupData,
      }),
    React.createElement(
      "section",
      {
        className: "hero",
      },
      React.createElement(
        "div",
        {
          className: "maxwidth",
        },
        React.createElement(
          "div",
          {
            className: "herosection",
          },
          React.createElement(
            "div",
            {
              className: "sliderwrapper",
            },
            React.createElement(
              "div",
              {
                className: "Gallery",
              },
              React.createElement(
                "div",
                {
                  className: "carousel",
                  "data-carousel": true,
                },
                React.createElement(
                  "ul",
                  {
                    "data-slides": true,
                  },
                  React.createElement(
                    "li",
                    {
                      className: "slide active fade",
                      "data-active": true,
                    },
                    React.createElement("img", {
                      src: dynamicData.sliderbus,
                      alt: "",
                    }),
                    React.createElement(
                      "div",
                      {
                        className: "carousel-caption",
                      },
                      React.createElement(
                        "div",
                        {
                          className: "slidercontent",
                        },
                        React.createElement(
                          "div",
                          {
                            className: "captionpart",
                          },
                          React.createElement(
                            "h1",
                            null,
                            "More than Just ",
                            React.createElement("i", null),
                            "a ",
                            React.createElement("span", null, "Bus Ride")
                          ),
                          React.createElement(
                            "p",
                            null,
                            "Get ",
                            React.createElement("label", null, "flat 15% off"),
                            " on every ride."
                          )
                        ),
                        React.createElement(
                          "div",
                          {
                            className: "slideroffer",
                          },
                          React.createElement(
                            "div",
                            {
                              className: "offerspart",
                            },
                            React.createElement(
                              "div",
                              {
                                className: "offer-slide",
                              },
                              React.createElement("div", null)
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          ),
          React.createElement(
            "div",
            {
              className: "bookingwrapper",
            },
            React.createElement("h2", null, "Book Your Bus Ticket"),
            React.createElement(
              "div",
              {
                className: "bookingpart",
              },
              React.createElement(
                "div",
                {
                  className: "container",
                },
                React.createElement(
                  "div",
                  {
                    className: "bookingform",
                  },
                  React.createElement(
                    "ul",
                    {
                      className: "nav nav-tabs",
                      id: "myTab",
                    },
                    React.createElement(
                      "div",
                      {
                        className: "partialradiogroup",
                      },
                      React.createElement(
                        RadioGroup,
                        {
                          row: true,
                          "aria-labelledby":
                            "demo-form-control-label-placement",
                          name: "Trip Type",
                          value: tripType,
                          onChange: update_TripType,
                        },
                        React.createElement(FormControlLabel, {
                          value: "1",
                          control: React.createElement(Radio, null),
                          label: "One way",
                          labelPlacement: "top",
                        }),
                        React.createElement(FormControlLabel, {
                          value: "2",
                          control: React.createElement(Radio, null),
                          label: "Round Trip",
                          labelPlacement: "top",
                        })
                      )
                    )
                  ),
                  React.createElement(
                    "div",
                    {
                      className: "tab-content",
                    },
                    React.createElement(
                      "div",
                      {
                        className: "tab-bookingform",
                      },
                      React.createElement(
                        "div",
                        {
                          className: "bookingcity",
                        },
                        React.createElement(
                          "div",
                          {
                            className: "bookinginput bookingtocity",
                          },
                          React.createElement(Autocomplete, {
                            id: "FromCity",
                            autoHighlight: true,
                            value: cityObj.fromCity,
                            options: cityList,
                            sx: {
                              width: 190,
                            },
                            onChange: (e, n) => {
                              ddlCityChange(e, n, "fromCity");
                            },
                            error: "true",
                            renderOption: (props, option) =>
                              React.createElement(
                                Box,
                                _extends(
                                  {
                                    component: "li",
                                  },
                                  props,
                                  {
                                    key: option.key,
                                  }
                                ),
                                (option.Pickup == 0 &&
                                  React.createElement(
                                    "span",
                                    {
                                      className: "fromcitypickupicon",
                                    },
                                    React.createElement("i", {
                                      className: "far fa-building",
                                    }),
                                    " " + option.label
                                  )) ||
                                  React.createElement(
                                    "span",
                                    {
                                      className: "fromcitypickupicon01",
                                    },
                                    React.createElement("i", {
                                      className: "fas fa-map-marker-alt",
                                    }),
                                    " " + option.label
                                  )
                              ),
                            renderInput: (params) =>
                              React.createElement(
                                TextField,
                                _extends({}, params, {
                                  label: "",
                                  variant: "standard",
                                  placeholder: "Source",
                                })
                              ),
                          }),
                          React.createElement(
                            "span",
                            {
                              className: "redclr",
                              id: "spanFromCity",
                              style: {
                                display: "none",
                                color: "red",
                              },
                            },
                            "Please Select From City"
                          )
                        ),
                        React.createElement(
                          "div",
                          {
                            className: "cityswapicon",
                            onClick: () => {
                              Swap_City("fromCity", "toCity");
                            },
                          },
                          "\xA0"
                        ),
                        React.createElement(
                          "div",
                          {
                            className: "bookinginput bookingdromcity",
                          },
                          React.createElement(Autocomplete, {
                            open: open,
                            onOpen: () => setOpen(true),
                            onClose: () => setOpen(false),
                            disablePortal: true,
                            id: "ToCity",
                            autoHighlight: true,
                            value: cityObj.toCity,
                            options: toCityList,
                            sx: {
                              width: 190,
                            },
                            onChange: (e, n) => {
                              ddlCityChange(e, n, "toCity");
                            },
                            renderOption: (props, option) =>
                              React.createElement(
                                Box,
                                _extends(
                                  {
                                    component: "li",
                                  },
                                  props,
                                  {
                                    key: option.key,
                                  }
                                ),
                                (option.Pickup == 0 &&
                                  React.createElement(
                                    "span",
                                    {
                                      className: "fromcitypickupicon",
                                    },
                                    React.createElement("i", {
                                      className: "far fa-building",
                                    }),
                                    " " + option.label
                                  )) ||
                                  React.createElement(
                                    "span",
                                    {
                                      className: "fromcitypickupicon01",
                                    },
                                    React.createElement("i", {
                                      className: "fas fa-map-marker-alt",
                                    }),
                                    " " + option.label
                                  )
                              ),
                            renderInput: (params) =>
                              React.createElement(
                                TextField,
                                _extends({}, params, {
                                  label: "",
                                  variant: "standard",
                                  placeholder: "Destination",
                                })
                              ),
                          }),
                          React.createElement(
                            "span",
                            {
                              className: "redclr",
                              id: "spanToCity",
                              style: {
                                display: "none",
                                color: "red",
                              },
                            },
                            "Please select Destination"
                          ),
                          React.createElement(
                            "span",
                            {
                              className: "redclr",
                              id: "spanInvToCity",
                              style: {
                                display: "none",
                                color: "red",
                              },
                            },
                            "Invalid Destination Selection"
                          )
                        )
                      ),
                      React.createElement(
                        "div",
                        {
                          className: "bookingcity bookingdate",
                        },
                        React.createElement(
                          "div",
                          {
                            className: "fromdatecity",
                          },
                          React.createElement(
                            "div",
                            {
                              className: "bookinginput bookingtodate",
                            },
                            React.createElement("input", {
                              type: "text",
                              id: "txtFromDate",
                              ref: Journydate,
                              className: "date txtDateTime",
                              placeholder: "Departing",
                              autoComplete: "off",
                              readOnly: true,
                            }),
                            React.createElement(
                              "span",
                              {
                                className: "redclr",
                                id: "spanFromDate",
                                style: {
                                  display: "none",
                                  color: "red",
                                },
                              },
                              "Please Select Journy Date"
                            ),
                            React.createElement(
                              "span",
                              {
                                className: "redclr",
                                id: "spanValidFromDate",
                                style: {
                                  display: "none",
                                  color: "red",
                                },
                              },
                              "Please Select Valid Journy Date"
                            )
                          ),
                          cityObj.tripType == 1 &&
                            React.createElement(
                              React.Fragment,
                              null,
                              React.createElement(
                                "div",
                                {
                                  className: "bookinginput bookingfromdate",
                                },
                                React.createElement("input", {
                                  type: "text",
                                  id: "txtToDate",
                                  ref: Journydate,
                                  className: "date txtDateTime",
                                  placeholder: "Return",
                                  autoComplete: "off",
                                  readOnly: true,
                                }),
                                React.createElement(
                                  "span",
                                  {
                                    className: "redclr",
                                    id: "spanValidFromDate",
                                    style: {
                                      display: "none",
                                      color: "red",
                                    },
                                  },
                                  "Please Select Valid From Date"
                                ),
                                React.createElement(
                                  "span",
                                  {
                                    className: "redclr",
                                    id: "spanValidToDate",
                                    style: {
                                      display: "none",
                                      color: "red",
                                    },
                                  },
                                  "Please Select Valid Journy Date"
                                )
                              ),
                              React.createElement(
                                "div",
                                {
                                  style: {
                                    display: "none",
                                  },
                                },
                                _.defer(() => {
                                  Loadindx();
                                  return "";
                                })
                              )
                            )
                        )
                      ),
                      React.createElement(
                        "div",
                        {
                          className: "bookingsearch",
                        },
                        React.createElement(
                          "button",
                          {
                            type: "button",
                            className: "searchbtn",
                            onClick: searchRoutes,
                          },
                          "Search"
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    ),
    React.createElement(
      "div",
      {
        className: "easemytripwrap",
      },
      React.createElement(
        "div",
        {
          className: "container",
        },
        React.createElement(
          "div",
          {
            className: "easemytrip",
          },
          React.createElement(
            "div",
            {
              className: "easemytripart",
            },
            React.createElement(
              "div",
              {
                className: "toptitle",
              },
              React.createElement(
                "h2",
                null,
                "Now Book Cab, Hotel, Flight with us"
              )
            ),
            React.createElement(
              "div",
              {
                className: "easemytripartlogo",
              },
              React.createElement("img", {
                src: dynamicData.easeMyTripLogo,
                loading: "lazy",
              })
            )
          ),
          React.createElement(
            "div",
            {
              className: "easemytripsec",
            },
            React.createElement(
              "a",
              {
                href: "javascript:void(0);",
                className: "easemytripbox",
              },
              React.createElement("span", null, "\xA0"),
              React.createElement("h3", null, "Cabs")
            ),
            React.createElement(
              "a",
              {
                href: "javascript:void(0);",
                className: "easemytripbox easemytripbox02",
              },
              React.createElement("span", null, "\xA0"),
              React.createElement("h3", null, "Hotels")
            ),
            React.createElement(
              "a",
              {
                href: "javascript:void(0);",
                className: "easemytripbox easemytripbox03",
              },
              React.createElement("span", null, "\xA0"),
              React.createElement("h3", null, "Flights")
            ),
            React.createElement(
              "a",
              {
                href: "javascript:void(0);",
                className: "easemytripbox easemytripbox04",
              },
              React.createElement("span", null, "\xA0"),
              React.createElement("h3", null, "Activities")
            ),
            React.createElement(
              "a",
              {
                href: "javascript:void(0);",
                className: "easemytripbox easemytripbox05",
              },
              React.createElement("span", null, "\xA0"),
              React.createElement("h3", null, "Holidays")
            )
          )
        )
      )
    ),
    React.createElement(
      "div",
      {
        className: "offerdeals",
      },
      React.createElement(
        "div",
        {
          className: "container",
        },
        React.createElement(
          "div",
          {
            className: "offerpart",
          },
          React.createElement(
            "div",
            {
              className: "toptitle",
            },
            React.createElement("h2", null, "Super Offers and Deals"),
            React.createElement(
              "p",
              null,
              "Make your journey better with our latest offers, deals, and rewards."
            )
          )
        )
      )
    ),
    React.createElement(
      "div",
      {
        className: "eventpart",
      },
      React.createElement(
        "div",
        {
          className: "container",
        },
        React.createElement(
          "div",
          {
            className: "eventarea",
          },
          React.createElement(
            "div",
            {
              className: "mobileventarea",
            },
            React.createElement(
              "div",
              {
                className: "toptitle",
              },
              React.createElement("h2", null, "Planning an Event?"),
              React.createElement(
                "p",
                null,
                "Book Now and Get Best Deals on Best Buses."
              )
            ),
            React.createElement(
              "div",
              {
                className: "eventbutton",
              },
              React.createElement(
                "ul",
                null,
                React.createElement(
                  "li",
                  null,
                  React.createElement(
                    Link,
                    {
                      to: "/BusCharter",
                      onClick: scroll,
                    },
                    "Book Now"
                  )
                )
              )
            )
          )
        )
      )
    ),
    React.createElement(
      "section",
      {
        className: "topdestination",
      },
      React.createElement(
        "div",
        {
          className: "maxwidth",
        },
        React.createElement(
          "div",
          {
            className: "toprouteicon",
          },
          React.createElement(
            "div",
            {
              id: "popup3",
              className: "popup-container popup-style-3",
            },
            React.createElement(
              "div",
              {
                className: "popup-content03",
              },
              React.createElement(
                "div",
                {
                  className: "popupblock03",
                },
                React.createElement(
                  "span",
                  {
                    onClick: ClosePoproute,
                  },
                  "\xD7"
                ),
                React.createElement(
                  "div",
                  {
                    className: "popuproutepart",
                  },
                  React.createElement(
                    "div",
                    {
                      className: "routeimage",
                    },
                    React.createElement("iframe", {
                      id: "routeImage",
                      src: popularToCity?.AnimationImgURL,
                      width: "841",
                      height: "202",
                    })
                  ),
                  React.createElement(
                    "div",
                    {
                      className: "routetabwrap",
                    },
                    React.createElement(
                      "div",
                      {
                        className: "routetabpart",
                      },
                      React.createElement(
                        "h3",
                        null,
                        "Travelling to ",
                        React.createElement(
                          "i",
                          null,
                          popularToCity?.ToCityName
                        )
                      )
                    ),
                    React.createElement(
                      "div",
                      {
                        className: "routetabarea",
                      },
                      React.createElement(
                        "div",
                        {
                          className: "routetabbing",
                        },
                        React.createElement(
                          "div",
                          {
                            className: "routepoptab",
                          },
                          React.createElement("p", null, "From:"),
                          React.createElement(
                            "div",
                            {
                              className: "routedropcity",
                            },
                            React.createElement(Autocomplete, {
                              open: open,
                              onOpen: () => setOpen(true),
                              onClose: () => setOpen(false),
                              disablePortal: true,
                              id: "ToCity",
                              autoHighlight: true,
                              value: cityObj.fromCity,
                              options: fromCityList,
                              sx: {
                                width: 190,
                              },
                              onChange: (e, n) => {
                                ddlTopDestinationCityChange(e, n, "fromCity");
                              },
                              renderOption: (props, option) =>
                                React.createElement(
                                  Box,
                                  _extends(
                                    {
                                      component: "li",
                                    },
                                    props,
                                    {
                                      key: option.key,
                                    }
                                  ),
                                  option.label
                                ),
                              renderInput: (params) =>
                                React.createElement(
                                  TextField,
                                  _extends({}, params, {
                                    label: "",
                                    variant: "standard",
                                    placeholder: "Destination",
                                  })
                                ),
                            })
                          )
                        ),
                        React.createElement(
                          "div",
                          {
                            className: "routepoptab routepoptab02",
                          },
                          React.createElement("p", null, "Departure:"),
                          React.createElement(
                            "div",
                            {
                              className: "routedatepicker",
                            },
                            React.createElement(
                              "div",
                              {
                                className: "routestitle2",
                              },
                              React.createElement("input", {
                                type: "text",
                                id: "txtFromDate_popular",
                                ref: Journydate,
                                className: "date txtDateTime",
                                placeholder: "Departing",
                                autoComplete: "off",
                              })
                            )
                          )
                        )
                      ),
                      React.createElement(
                        "div",
                        {
                          className: "routepopsearch",
                        },
                        React.createElement(
                          "button",
                          {
                            type: "button",
                            className: "searchbtn",
                            onClick: SearchPopularRoute,
                          },
                          "Search Buses"
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        ),
        React.createElement(
          "div",
          {
            className: "destinationpart",
          },
          React.createElement(
            "div",
            {
              className: "container",
            },
            React.createElement(
              "div",
              {
                className: "destinationwrap",
              },
              React.createElement(
                "div",
                {
                  className: "toptitle",
                },
                React.createElement("h2", null, "Our Popular Destinations"),
                React.createElement(
                  "p",
                  null,
                  "Super discounts and rewards after every bus ride."
                )
              ),
              React.createElement(
                "div",
                {
                  className: "destinationarea",
                },
                React.createElement(
                  "div",
                  {
                    className: "destinationslider",
                  },
                  React.createElement(
                    "div",
                    {
                      className: "row align-items-center",
                    },
                    React.createElement(
                      "div",
                      {
                        className: "col-12 col-carousel",
                      },
                      React.createElement(
                        "div",
                        {
                          className: "owl-carousel carousel-route",
                        },
                        cityPairs.topDestination.length > 0 &&
                          cityPairs.topDestination.map((td, index) =>
                            React.createElement(
                              React.Fragment,
                              {
                                key: index,
                              },
                              React.createElement(
                                "div",
                                {
                                  className: "destinationicon",
                                },
                                React.createElement(
                                  "div",
                                  {
                                    onClick: () => {
                                      openTopDestination(index, td);
                                    },
                                    className: "destinationbox",
                                  },
                                  React.createElement("img", {
                                    src: td.ImgURL,
                                    alt: "",
                                  }),
                                  React.createElement(
                                    "span",
                                    null,
                                    td.ToCityName
                                  ),
                                  cityObj.topDestination == index &&
                                    React.createElement(ToCityComponent, {
                                      data: tocitycom,
                                    })
                                )
                              )
                            )
                          )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    ),
    React.createElement(
      "div",
      {
        className: "citywraper",
      },
      React.createElement(
        "div",
        {
          className: "container",
        },
        React.createElement(
          "div",
          {
            className: "cityarea",
          },
          React.createElement(
            "div",
            {
              className: "tab-block",
              id: "tab-block",
            },
            React.createElement(
              "ul",
              {
                className: "tab-mnu",
              },
              React.createElement(
                "li",
                {
                  className: "active",
                },
                "Ahmedabad to Bengaluru"
              ),
              React.createElement("li", null, "Mumbai to Goa"),
              React.createElement("li", null, "Mumbai to Bengaluru"),
              React.createElement("li", null, "Goa to Banglore")
            ),
            React.createElement(
              "div",
              {
                className: "tab-cont",
              },
              React.createElement(
                "div",
                {
                  className: "tab-pane",
                },
                React.createElement("img", {
                  src: dynamicData.ahmedabadroute,
                }),
                React.createElement(
                  "div",
                  {
                    className: "citytab-content",
                  },
                  React.createElement(
                    "p",
                    null,
                    "Via - Surat, Vapi, Mumbai, Pune, Belagavi, Dharwad, ",
                    React.createElement(
                      "i",
                      null,
                      "Hubballi, Rannebenur, Chitradurga, Tumkur"
                    )
                  ),
                  React.createElement(
                    "a",
                    {
                      onClick: () => {
                        SelectRouteThroughQuickLinks(QuickSearch[0]);
                      },
                    },
                    "Book Now"
                  )
                )
              ),
              React.createElement(
                "div",
                {
                  className: "tab-pane",
                },
                React.createElement("img", {
                  src: dynamicData.goa,
                }),
                React.createElement(
                  "div",
                  {
                    className: "citytab-content",
                  },
                  React.createElement(
                    "p",
                    null,
                    "Via - Mumbai, Pune, Satara, ",
                    React.createElement("i", null, "Karad, Kolhapur, Goa")
                  ),
                  React.createElement(
                    "a",
                    {
                      onClick: () => {
                        SelectRouteThroughQuickLinks(QuickSearch[1]);
                      },
                    },
                    "Book Now"
                  )
                )
              ),
              React.createElement(
                "div",
                {
                  className: "tab-pane",
                },
                React.createElement("img", {
                  src: dynamicData.mumbairoute,
                }),
                React.createElement(
                  "div",
                  {
                    className: "citytab-content",
                  },
                  React.createElement(
                    "p",
                    null,
                    "Via - Pune, Satara, Karad, Kolhapur, Nippanni, Belagavi, ",
                    React.createElement(
                      "i",
                      null,
                      "Hubballi, Rannebenur, Chitradurga, Tumkur"
                    )
                  ),
                  React.createElement(
                    "a",
                    {
                      onClick: () => {
                        SelectRouteThroughQuickLinks(QuickSearch[2]);
                      },
                    },
                    "Book Now"
                  )
                )
              ),
              React.createElement(
                "div",
                {
                  className: "tab-pane",
                },
                React.createElement("img", {
                  src: dynamicData.bangalore,
                }),
                React.createElement(
                  "div",
                  {
                    className: "citytab-content",
                  },
                  React.createElement(
                    "p",
                    null,
                    "Via - Goa, Karwar, Hubballi, Davanagere, ",
                    React.createElement(
                      "i",
                      null,
                      "Chitradurga, Tumakuru, Bengaluru"
                    )
                  ),
                  React.createElement(
                    "a",
                    {
                      onClick: () => {
                        SelectRouteThroughQuickLinks(QuickSearch[3]);
                      },
                    },
                    "Book Now"
                  )
                )
              )
            )
          )
        )
      )
    ),
    React.createElement(
      Suspense,
      null,
      React.createElement(OtherIndexDetails, {
        chldIndx: chldIndx,
      })
    ),
    dlgMsg.open &&
      React.createElement(
        Dialog,
        {
          open: dlgMsg.open,
          TransitionComponent: Transition,
          keepMounted: true,
          maxWidth: "xl",
          onClose: handleClose,
          "aria-describedby": "alert-dialog-slide-description",
          className: "termsdatapart",
        },
        React.createElement(
          DialogContent,
          null,
          React.createElement(
            Suspense,
            null,
            React.createElement(MessagePopup, {
              Msg: dlgMsg,
              close: handleClose,
            })
          )
        )
      ),
    displayPopup &&
      1 == 2 &&
      React.createElement(
        React.Fragment,
        null,
        React.createElement(
          Dialog,
          {
            open: displayPopup,
            className: "indexpopup",
            TransitionComponent: Transition,
            keepMounted: true,
            onClose: Close_Popup,
            "aria-describedby": "alert-dialog-slide-description",
          },
          React.createElement(
            DialogTitle,
            null,
            React.createElement(
              Button,
              {
                className: "",
                onClick: Close_Popup,
              },
              React.createElement("i", {
                className: "fa-solid fa-square-xmark",
              })
            )
          ),
          React.createElement(
            DialogContent,
            null,
            React.createElement("img", {
              src: dynamicData.DiscountPopup,
              alt: "15% Discount",
            })
          )
        )
      )
  );
};

const ToCityComponent = (props) => {
  const { cityList, TocityChange } = props.data;
  let [toCity, setToCity] = useState({
    value: 0,
    label: "",
  });
  let [open, setOpen] = useState(true);
  useEffect(() => {
    (async function () {
      $("#txtCitySearch").on("keyup", function () {
        var value = $(this).val().toLowerCase();
        $(".tocitylist").filter(function () {
          $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
        });
      });
    })();
  }, []);

  const ddlCityTocity = (n) => {
    try {
      setToCity(n);
      TocityChange(n);
    } catch (error) {
      const id = CreateNewDiv();
      const root1 = ReactDOM.createRoot(document.getElementById(id));
      root1.render(
        React.createElement(
          Suspense,
          null,
          React.createElement(ErrorLog, {
            CustomErrorObj: {
              errorObj: error,
              developerName: "Ruturajsinh Jadeja",
            },
          })
        )
      );
      RemoveDiv(id);
    } finally {
    }
  };

  return React.createElement(
    React.Fragment,
    null,
    React.createElement(
      "div",
      {
        className: "destinationroutelist",
      },
      React.createElement("input", {
        id: "txtCitySearch",
        type: "input",
        placeholder: "search",
      }),
      React.createElement(
        "ul",
        null,
        cityList.length > 0 &&
          cityList.map((city, index) =>
            React.createElement(
              React.Fragment,
              {
                key: index,
              },
              React.createElement(
                "li",
                {
                  className: "tocitylist",
                  onClick: () => {
                    ddlCityTocity(city);
                  },
                },
                city.label
              )
            )
          )
      )
    )
  );
};

const OtherIndexDetails = (props) => {
  let history = useHistory();
  const { compDetails, topTenCust, BlogData } = props.chldIndx;
  let [dlgMsg, setdlMsg] = useState({
    open: false,
    msg: "",
    type: 0,
  });
  let [mobileNo, setmobileNo] = useState({
    Mobilenumber: "",
    regexp: /^[0-9\b]+$/,
    Validation: 0, // 0= none, 1 = invalide mobileno, 2= success link send
  });
  useEffect(() => {
    (async function () {
      await loadData2();
    })();
  }, []);

  const insertError = (error, dev_Name) => {
    const id = CreateNewDiv();
    const root1 = ReactDOM.createRoot(document.getElementById(id));
    root1.render(
      React.createElement(
        Suspense,
        null,
        React.createElement(ErrorLog, {
          CustomErrorObj: {
            errorObj: error,
            developerName: dev_Name,
          },
        })
      )
    );
    RemoveDiv(id);
  };

  const handleClose = () => {
    setdlMsg({
      open: false,
      msg: "",
      type: 0,
    });
  };

  const dynamicData = {
    //img1: compDetails?.companyData?.DataFolder + "/images/site/Logo.png?d=0.0",
    img1:
      compDetails?.companyData?.CDNDataFolder +
      "/images/site/Logo.png?d=" +
      version,
    slider:
      compDetails?.companyData?.CDNDataFolder +
      "/images/slider.webp?d=" +
      version,
    Offer_Card01:
      compDetails?.companyData?.CDNDataFolder +
      "/images/Offer_Card01.webp?d=" +
      version,
    Offer_Card02:
      compDetails?.companyData?.CDNDataFolder +
      "/images/Offer_Card02.webp?d=" +
      version,
    Offer_Card03:
      compDetails?.companyData?.CDNDataFolder +
      "/images/Offer_Card03.webp?d=" +
      version,
    Testimonial_User:
      compDetails?.companyData?.CDNDataFolder +
      "/images/Testimonial_User.png?d=" +
      version,
    Mobile_QR:
      compDetails?.companyData?.CDNDataFolder +
      "/images/Mobile_QR.webp?d=" +
      version,
    Playstore_Button:
      compDetails?.companyData?.CDNDataFolder +
      "/images/Playstore_Button.png?d=" +
      version,
    Appstore_Button:
      compDetails?.companyData?.CDNDataFolder +
      "/images/Appstore_Button.png?d=" +
      version,
    bus_photo_01:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/bus_photo_01.jpg?d=" +
      version,
    bus_photo_02:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/bus_photo_02.jpg?d=" +
      version,
    bus_photo_03:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/bus_photo_03.jpg?d=" +
      version,
    bus_photo_04:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/bus_photo_04.jpg?d=" +
      version,
    bus_photo_05:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/bus_photo_05.jpg?d=" +
      version,
    superbus01:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/superbus01.jpg?d=" +
      version,
    superbus02:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/superbus02.jpg?d=" +
      version,
    superbus03:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/superbus03.jpg?d=" +
      version,
    google_play:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/google-play.png?d=" +
      version,
    google_App:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/google-app.png?d=" +
      version,
    appqrscanner:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/appqrscanner.png?d=" +
      version,
    application:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/application.png?d=" +
      version,
    superbuslogo:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/superbuslogo.png?d=" +
      version,
    m_explore1:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/m_explore1.png?d=" +
      version,
    m_explore2:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/m_explore2.png?d=" +
      version,
    m_explore3:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/m_explore3.png?d=" +
      version,
    mobile_app:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/mobile_app.png?d=" +
      version,
    sbusicon1:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/sbusicon1.png?d=" +
      version,
    sbusicon2:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/sbusicon2.png?d=" +
      version,
    sbusicon3:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/sbusicon3.png?d=" +
      version,
    superbusmbl01:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/superbusmbl01.jpg?d=" +
      version,
    superbusmbl02:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/superbusmbl02.jpg?d=" +
      version,
    superbusmbl03:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/superbusmbl03.jpg?d=" +
      version,
  };

  const loadData2 = () => {
    try {
      jQuery(document).ready(function ($) {
        function playSlide(slide) {
          for (var k = 0; k < testimDots.length; k++) {
            testimContent[k].classList.remove("active");
            testimContent[k].classList.remove("inactive");
            testimDots[k].classList.remove("active");
          }

          if (slide < 0) {
            slide = currentSlide = testimContent.length - 1;
          }

          if (slide > testimContent.length - 1) {
            slide = currentSlide = 0;
          }

          if (currentActive != currentSlide) {
            testimContent[currentActive].classList.add("inactive");
          }

          testimContent[slide].classList.add("active");
          testimDots[slide].classList.add("active");
          currentActive = currentSlide;
          clearTimeout(testimTimer);
          testimTimer = setTimeout(function () {
            playSlide((currentSlide += 1));
          }, testimSpeed);
        }

        let i = 0;
        $(".testsliderpage").each(function (obj, data) {
          i++;

          if (i == 1) {
            data.classList.add("mainhpageslider");
          }
        });
      });
      $("#popupopen").click(function () {
        $("#theModal").modal("show");
      });
      $("#popupclose").click(function () {
        $("#theModal").modal("hide");
      });
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    } finally {
    }
  };

  const _BlogLoadFunction = () => {
    $(".carousel-main01").owlCarousel({
      items: 3,
      loop: true,
      autoplay: true,
      autoplayTimeout: 3500,
      margin: 10,
      nav: true,
      dots: false,
      navText: [
        '<span className="fas fa-chevron-left fa-2x"></span>',
        '<span className="fas fa-chevron-right fa-2x"></span>',
      ],
      responsive: {
        480: {
          items: 1.5,
        },
        519: {
          items: 1.5,
        },
        520: {
          items: 2,
        },
        859: {
          items: 2,
        },
        960: {
          items: 2.8,
          margin: 15,
        },
        1200: {
          items: 2.8,
          margin: 15,
        },
        1899: {
          margin: 30,
        },
        1920: {
          items: 3,
        },
      },
    });
  };

  function _Loadblog() {
    _BlogLoadFunction();
  }

  const OpenPOP = () => {
    $("#popup2").addClass("openpop");
  };

  const ClosePop = () => {
    $("#popup2").removeClass("openpop");
  };

  const scrollTotop = () => {
    try {
      _.autoScrollDown("VRL_Header", 100, 0);
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    } finally {
    }
  };

  const alertBox_Main_Page = (mesage, type) => {
    try {
      setdlMsg({
        open: true,
        msg: mesage,
        type: type,
      });
      React.createElement(
        Dialog,
        {
          open: dlgMsg.open,
          TransitionComponent: Transition,
          keepMounted: true,
          maxWidth: "xl",
          onClose: handleClose,
          "aria-describedby": "alert-dialog-slide-description",
          className: "termsdatapart",
        },
        React.createElement(
          DialogContent,
          null,
          React.createElement(
            Suspense,
            null,
            React.createElement(MessagePopup, {
              Msg: dlgMsg,
              close: handleClose,
            })
          )
        )
      );
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    }
  };

  const sentLink = async () => {
    let Mobileno = mobileNo.Mobilenumber;

    if (Mobileno != "") {
      let isFlag = false;

      if (Mobileno.match(/^[6-9]\d{9}$/)) {
        isFlag = true;
      } else {
        isFlag = false;
        mobileNo.Validation = 1;
      }

      if (isFlag) {
        await axios
          .post("/Web_Methods/OtherWebMethod.aspx/Sentdownloadlink_vrl", {
            MobileNo: Mobileno,
          })
          .then(async (response) => {
            if (!response.data.d.isUrlExpired) {
              if (response.data.d.data != "") {
                let data = JSON.parse(response.data.d.data);
                mobileNo.Validation = 2;
                mobileNo.Mobilenumber = "";
              }
            }
          });
      }
    } else {
      alertBox_Main_Page("Please Enter Mobile number", 2);
    }

    setmobileNo((mobileNo) => _objectSpread({}, mobileNo));
  };

  const Numberchange = async (e, n) => {
    try {
      let telephone = e.target.value;

      if (telephone === "" || mobileNo.regexp.test(telephone)) {
        mobileNo.Mobilenumber = telephone;
        setmobileNo((mobileNo) => _objectSpread({}, mobileNo));
      }
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    }
  };

  const Imageside_click = (val) => {
    let ID = "#Imagepop" + val;
    $(ID).addClass("hiswshowclass");
  };

  const openImage = (e) => {
    $("#largeImage").attr(
      "src",
      $(e.currentTarget).attr("src").replace("thumb", "large")
    );
  }; //For Sending Data Using Queary String

  const gotoBlog = (ID) => {
    _.autoScrollDown("VRL_Header", 100, 0);

    history.push({
      pathname: "/BlogDetail",
      search: `?BM_ID=${ID}`,
    });
  };

  $(".testsliderpage").click((e) => {
    $(".testsliderpage").each(function (i, obj) {
      if (obj.classList.contains("mainhpageslider")) {
        obj.classList.remove("mainhpageslider");
      }
    });
    e.currentTarget.classList.add("mainhpageslider");
  });
  return React.createElement(
    React.Fragment,
    null,
    React.createElement(
      "div",
      {
        className: "chooseusfacility",
      },
      React.createElement(
        "div",
        {
          className: "profiletravelicon",
        },
        React.createElement(
          "div",
          {
            id: "popup2",
            className: "popup-container popup-style-2",
          },
          React.createElement(
            "div",
            {
              className: "popup-content02",
            },
            React.createElement(
              "div",
              {
                className: "popupblock02",
              },
              React.createElement(
                "span",
                {
                  onClick: ClosePop,
                },
                "\xD7"
              ),
              React.createElement(
                "div",
                {
                  className: "popupblockpart",
                },
                React.createElement(
                  "div",
                  {
                    className: "productImage",
                  },
                  React.createElement("img", {
                    id: "largeImage",
                    src: dynamicData.bus_photo_01,
                    alt: "Default Image",
                  })
                ),
                React.createElement(
                  "div",
                  {
                    id: "thumbs",
                  },
                  React.createElement("img", {
                    className: "testsliderpage",
                    src: dynamicData.bus_photo_01,
                    alt: "1st image",
                    onClick: (e) => {
                      openImage(e);
                    },
                  }),
                  React.createElement("img", {
                    className: "testsliderpage",
                    src: dynamicData.bus_photo_02,
                    alt: "2nd image",
                    onClick: (e) => {
                      openImage(e);
                    },
                  }),
                  React.createElement("img", {
                    className: "testsliderpage",
                    src: dynamicData.bus_photo_03,
                    alt: "3rd image",
                    onClick: (e) => {
                      openImage(e);
                    },
                  }),
                  React.createElement("img", {
                    className: "testsliderpage",
                    src: dynamicData.bus_photo_04,
                    alt: "4th image",
                    onClick: (e) => {
                      openImage(e);
                    },
                  }),
                  React.createElement("img", {
                    className: "testsliderpage",
                    src: dynamicData.bus_photo_05,
                    alt: "5th image",
                    onClick: (e) => {
                      openImage(e);
                    },
                  })
                ),
                React.createElement(
                  "div",
                  {
                    className: "supertabwrap",
                  },
                  React.createElement(
                    "div",
                    {
                      className: "supertabpart",
                    },
                    React.createElement(
                      "div",
                      {
                        className: "supertabs",
                      },
                      React.createElement("input", {
                        type: "radio",
                        name: "supertabs",
                        id: "tabone",
                        defaultChecked: true,
                      }),
                      React.createElement(
                        "label",
                        {
                          htmlFor: "tabone",
                        },
                        "About Us"
                      ),
                      React.createElement(
                        "div",
                        {
                          className: "sprtabbing",
                        },
                        React.createElement("h1", null, "Super Bus Travel"),
                        React.createElement(
                          "div",
                          {
                            className: "sprbustype",
                          },
                          React.createElement("span", null, "AC Sleeper 2 + 1"),
                          " ",
                          React.createElement("span", null, "Tracking")
                        ),
                        React.createElement(
                          "p",
                          null,
                          "Fully-equipped with air-conditioned comfort and sleeping accommodations for passengers during long-distance journeys. Designed with individual berths, typically with curtains or partitions for privacy. Also includes super amenities such as comfortable mattresses, bed sheets, blankets, charging ports, reading lights, wifi and more."
                        )
                      ),
                      React.createElement("input", {
                        type: "radio",
                        name: "supertabs",
                        id: "tabtwo",
                      }),
                      React.createElement(
                        "label",
                        {
                          htmlFor: "tabtwo",
                        },
                        "Amenities"
                      ),
                      React.createElement(
                        "div",
                        {
                          className: "sprtabbing",
                        },
                        React.createElement("h1", null, "Super Bus Travel"),
                        React.createElement(
                          "div",
                          {
                            className: "amenities-sprtablist",
                          },
                          React.createElement(
                            "div",
                            {
                              className: "amenities-sprtab",
                            },
                            React.createElement("p", null, "M-Ticket")
                          ),
                          React.createElement(
                            "div",
                            {
                              className: "amenities-sprtab",
                            },
                            React.createElement(
                              "p",
                              {
                                className: "amini02",
                              },
                              "Deep Cleaned ",
                              React.createElement("i", null, "Bus")
                            )
                          ),
                          React.createElement(
                            "div",
                            {
                              className: "amenities-sprtab",
                            },
                            React.createElement(
                              "p",
                              {
                                className: "amini03",
                              },
                              "Magazine Pouch"
                            )
                          ),
                          React.createElement(
                            "div",
                            {
                              className: "amenities-sprtab",
                            },
                            React.createElement(
                              "p",
                              {
                                className: "amini04",
                              },
                              "Bus Live ",
                              React.createElement("i", null, "Tracking")
                            )
                          ),
                          React.createElement(
                            "div",
                            {
                              className: "amenities-sprtab",
                            },
                            React.createElement(
                              "p",
                              {
                                className: "amini05",
                              },
                              "Charging Point"
                            )
                          ),
                          React.createElement(
                            "div",
                            {
                              className: "amenities-sprtab",
                            },
                            React.createElement(
                              "p",
                              {
                                className: "amini06",
                              },
                              "Reading Light"
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
      ),
      React.createElement(
        "div",
        {
          className: "superbuslider",
        },
        React.createElement(
          "div",
          {
            className: "container",
          },
          React.createElement(
            "div",
            {
              className: "toptitle",
            },
            React.createElement("h2", null, "Your Superbus Experience"),
            React.createElement(
              "p",
              null,
              "Journey Better with Vijayanand Travels!"
            )
          ),
          React.createElement(
            "div",
            {
              className: "superbusarea",
            },
            React.createElement(
              "div",
              {
                className: "row align-items-center",
              },
              React.createElement(
                "div",
                {
                  className: "col-12 col-carousel",
                },
                React.createElement(
                  "div",
                  {
                    className: "owl-carousel carousel-main2",
                  },
                  React.createElement(
                    "div",
                    {
                      className: "superbus-slide",
                    },
                    React.createElement(
                      "p",
                      {
                        onClick: OpenPOP,
                      },
                      React.createElement("img", {
                        src: dynamicData.superbus01,
                        loading: "lazy",
                      })
                    )
                  ),
                  React.createElement(
                    "div",
                    {
                      className: "superbus-slide",
                    },
                    React.createElement(
                      "p",
                      {
                        onClick: OpenPOP,
                      },
                      React.createElement("img", {
                        src: dynamicData.superbus02,
                        loading: "lazy",
                      })
                    )
                  ),
                  React.createElement(
                    "div",
                    {
                      className: "superbus-slide",
                    },
                    React.createElement(
                      "p",
                      {
                        onClick: OpenPOP,
                      },
                      React.createElement("img", {
                        src: dynamicData.superbus03,
                        loading: "lazy",
                      })
                    )
                  ),
                  React.createElement(
                    "div",
                    {
                      className: "superbus-slide",
                    },
                    React.createElement(
                      "p",
                      {
                        onClick: OpenPOP,
                      },
                      React.createElement("img", {
                        src: dynamicData.superbus01,
                        loading: "lazy",
                      })
                    )
                  ),
                  React.createElement(
                    "div",
                    {
                      className: "superbus-slide",
                    },
                    React.createElement(
                      "p",
                      {
                        onClick: OpenPOP,
                      },
                      React.createElement("img", {
                        src: dynamicData.superbus02,
                        loading: "lazy",
                      })
                    )
                  ),
                  React.createElement(
                    "div",
                    {
                      className: "superbus-slide",
                    },
                    React.createElement(
                      "p",
                      {
                        onClick: OpenPOP,
                      },
                      React.createElement("img", {
                        src: dynamicData.superbus03,
                        loading: "lazy",
                      })
                    )
                  )
                )
              )
            )
          )
        )
      ),
      React.createElement(
        "div",
        {
          className: "choosewrapper",
        },
        React.createElement(
          "div",
          {
            className: "container",
          },
          React.createElement(
            "div",
            {
              className: "choosecontent",
            },
            React.createElement(
              "div",
              {
                className: "toptitle toptitlehide",
              },
              React.createElement("h2", null, "Why Choose Us?"),
              React.createElement(
                "p",
                null,
                "See how we go the extra mile to make sure you have the best experience."
              )
            ),
            React.createElement(
              "div",
              {
                className: "toptitle choosetoptitle",
              },
              React.createElement(
                "h2",
                null,
                "Why Choose ",
                React.createElement("i", null, "Vijayanand Travels?")
              ),
              React.createElement(
                "p",
                null,
                "Journey Better with Vijayanand Travels!"
              )
            ),
            React.createElement(
              "div",
              {
                className: "chooseusrow",
              },
              React.createElement(
                "div",
                {
                  className: "chooseuscard",
                },
                React.createElement("em", {
                  className: "chooseuscardimage chooseuscardimage01",
                }),
                React.createElement("p", null, "Customer Gratification"),
                React.createElement(
                  "span",
                  null,
                  "We value our customers smiles over anything else, and offer services that go beyond industry standards."
                )
              ),
              React.createElement(
                "div",
                {
                  className: "chooseuscard",
                },
                React.createElement("em", {
                  className: "chooseuscardimage chooseuscardimage02",
                }),
                React.createElement("p", null, "Privacy first"),
                React.createElement(
                  "span",
                  null,
                  "Your privacy is of utmost importance to us! Rest assured, your personal details are safe with us, no matter what."
                )
              ),
              React.createElement(
                "div",
                {
                  className: "chooseuscard",
                },
                React.createElement("em", {
                  className: "chooseuscardimage chooseuscardimage03",
                }),
                React.createElement("p", null, "Safety & Punctuality"),
                React.createElement(
                  "span",
                  null,
                  "You're in safe hands! Ride in style and always be on time with Vijayanand Travels."
                )
              )
            )
          )
        )
      ),
      React.createElement(
        "div",
        {
          className: "amenitieswrapper",
        },
        React.createElement(
          "div",
          {
            className: "container",
          },
          React.createElement(
            "div",
            {
              className: "amenitiespart",
            },
            React.createElement(
              "div",
              {
                className: "toptitle",
              },
              React.createElement(
                "h2",
                null,
                "Making your ",
                React.createElement("i", null, "bus journey better")
              ),
              React.createElement("p", null, "Check out all our bus amenities")
            ),
            React.createElement(
              "div",
              {
                className: "amenitiesrow",
              },
              React.createElement(
                "div",
                {
                  className: "amenitiescard amenitiescard01",
                },
                React.createElement("em", null, "\xA0"),
                React.createElement("span", null, "Charging Points")
              ),
              React.createElement(
                "div",
                {
                  className: "amenitiescard amenitiescard02",
                },
                React.createElement("em", null, "\xA0"),
                React.createElement("span", null, "Luggage Safety")
              ),
              React.createElement(
                "div",
                {
                  className: "amenitiescard amenitiescard03",
                },
                React.createElement("em", null, "\xA0"),
                React.createElement("span", null, "Live Bus Tracking")
              ),
              React.createElement(
                "div",
                {
                  className: "amenitiescard amenitiescard04",
                },
                React.createElement("em", null, "\xA0"),
                React.createElement("span", null, "Back Up Drivers")
              ),
              React.createElement(
                "div",
                {
                  className: "amenitiescard amenitiescard05",
                },
                React.createElement("em", null, "\xA0"),
                React.createElement("span", null, "Blankets In AC Buses")
              ),
              React.createElement(
                "div",
                {
                  className: "amenitiescard amenitiescard06",
                },
                React.createElement("em", null, "\xA0"),
                React.createElement("span", null, "Fire Extinguishers")
              )
            )
          )
        )
      )
    ),
    React.createElement(
      "div",
      {
        className: "maxwidth",
      },
      React.createElement(
        "div",
        {
          className: "applicationwrapper",
        },
        React.createElement(
          "div",
          {
            className: "container",
          },
          React.createElement(
            "div",
            {
              className: "qrwrapper",
            },
            React.createElement(
              "div",
              {
                className: "qrdetails",
              },
              React.createElement(
                "div",
                {
                  className: "toptitle",
                },
                React.createElement(
                  "h2",
                  null,
                  "Best Buses, Best Deals. ",
                  React.createElement("i", null, "Only on the Vijayanand"),
                  " Travels App."
                )
              ),
              React.createElement(
                "div",
                {
                  className: "appsection",
                },
                React.createElement(
                  "span",
                  null,
                  React.createElement("i", {
                    className: "fa fa-check",
                  }),
                  "Track Bus in Real Time"
                ),
                React.createElement(
                  "span",
                  null,
                  React.createElement("i", {
                    className: "fa fa-check",
                  }),
                  "Flexi Tickets"
                ),
                React.createElement(
                  "span",
                  null,
                  React.createElement("i", {
                    className: "fa fa-check",
                  }),
                  "Live Updates"
                ),
                React.createElement(
                  "span",
                  null,
                  React.createElement("i", {
                    className: "fa fa-check",
                  }),
                  "15% Flat Discount"
                )
              ),
              React.createElement(
                "div",
                {
                  className: "qrcontent",
                },
                React.createElement(
                  "div",
                  {
                    className: "qrmobile",
                  },
                  React.createElement(
                    "div",
                    {
                      className: "qrmobilelink",
                    },
                    React.createElement(
                      "h3",
                      null,
                      "Enter Your Mobile Number And ",
                      React.createElement("i", null, "Get Mobile App Link")
                    ),
                    React.createElement(
                      "form",
                      {
                        className: "number-wrapper cf",
                      },
                      React.createElement("input", {
                        type: "text",
                        placeholder: "Mobile",
                        id: "SendLinkMobileno",
                        maxLength: "10",
                        pattern: "[0-9]*",
                        value: mobileNo.Mobilenumber,
                        onChange: (e, n) => {
                          Numberchange(e, n);
                        },
                      }),
                      React.createElement(
                        "button",
                        {
                          type: "button",
                          onClick: sentLink,
                        },
                        "GET LINK"
                      )
                    ),
                    mobileNo.Validation == 1 &&
                      React.createElement(
                        "p",
                        {
                          style: {
                            color: "red",
                          },
                        },
                        " Invalide Mobile Number. "
                      ),
                    mobileNo.Validation == 2 &&
                      React.createElement(
                        "p",
                        {
                          style: {
                            color: "blue",
                          },
                        },
                        " SMS successfully sent! "
                      )
                  ),
                  React.createElement(
                    "div",
                    {
                      className: "qrgicon",
                    },
                    React.createElement("a", {
                      href: "https://play.google.com/store/apps/details?id=vrlbus.in.vrltravels&hl=en",
                      target: "_blank",
                    }),
                    React.createElement("a", {
                      href: "https://apps.apple.com/in/app/vrl-travels/id1222928053",
                      target: "_blank",
                      className: "qrgiconapp",
                    })
                  )
                ),
                React.createElement(
                  "div",
                  {
                    className: "qrscanner",
                  },
                  React.createElement(
                    "span",
                    null,
                    React.createElement("img", {
                      src: dynamicData.appqrscanner,
                    })
                  ),
                  React.createElement(
                    "p",
                    null,
                    "scan QR code to ",
                    React.createElement("i", null, "download")
                  )
                )
              )
            ),
            React.createElement(
              "div",
              {
                className: "qrcode",
              },
              React.createElement("img", {
                src: dynamicData.application,
              })
            )
          )
        )
      )
    ),
    React.createElement(
      "div",
      {
        className: "maxwidth",
      },
      React.createElement(
        "div",
        {
          className: "exloreindia",
        },
        React.createElement(
          "div",
          {
            className: "container",
          },
          React.createElement(
            "div",
            {
              className: "exlorearea",
            },
            React.createElement(
              "div",
              {
                className: "toptitle",
              },
              React.createElement("h2", null, "Explore India"),
              React.createElement(
                "p",
                null,
                "There is a lot on our destinations palette that can be explored."
              )
            ),
            React.createElement(
              "div",
              {
                className: "exloreslider",
              },
              React.createElement(
                "div",
                {
                  className: "row align-items-center",
                },
                React.createElement(
                  "div",
                  {
                    className: "col-12 col-carousel",
                  },
                  BlogData.length > 0 &&
                    React.createElement(
                      React.Fragment,
                      null,
                      React.createElement(
                        "div",
                        {
                          className: "owl-carousel carousel-main01",
                        },
                        BlogData.map((det, index) =>
                          React.createElement(
                            React.Fragment,
                            {
                              key: index,
                            },
                            React.createElement(
                              "div",
                              null,
                              React.createElement(
                                "div",
                                {
                                  className: "exloreicon",
                                },
                                React.createElement(
                                  "div",
                                  {
                                    className: "exlorebox",
                                  },
                                  React.createElement("img", {
                                    src: det.BM_ThumbnailImage,
                                  }),
                                  React.createElement(
                                    "div",
                                    {
                                      className: "blog_box_content",
                                    },
                                    React.createElement(
                                      "p",
                                      null,
                                      det.BM_MainTitle
                                    ),
                                    React.createElement(
                                      "a",
                                      {
                                        onClick: (e) => {
                                          gotoBlog(det.BM_ID);
                                        },
                                      },
                                      "Read More"
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      ),
                      React.createElement(
                        "div",
                        {
                          style: {
                            display: "none",
                          },
                        },
                        _.defer(() => {
                          _Loadblog();

                          return "";
                        })
                      )
                    )
                )
              )
            ),
            React.createElement(
              "div",
              {
                className: "mblexplorepart",
              },
              React.createElement(
                "div",
                {
                  className: "mblexplorebtn",
                },
                React.createElement(
                  "a",
                  {
                    href: "#",
                  },
                  "Food"
                ),
                React.createElement(
                  "a",
                  {
                    href: "#",
                  },
                  "Festivals"
                ),
                React.createElement(
                  "a",
                  {
                    href: "#",
                  },
                  "Temples"
                ),
                React.createElement(
                  "a",
                  {
                    href: "#",
                  },
                  "South India"
                ),
                React.createElement(
                  "a",
                  {
                    href: "#",
                  },
                  "Beaches"
                )
              ),
              React.createElement(
                "div",
                {
                  className: "mblexploreicon",
                },
                React.createElement(
                  "div",
                  {
                    className: "mblexploreglry",
                  },
                  React.createElement(
                    "div",
                    {
                      className: "exploretext",
                    },
                    React.createElement("img", {
                      src: dynamicData.m_explore1,
                    }),
                    React.createElement(
                      "div",
                      {
                        className: "mblexplorecontent",
                      },
                      React.createElement(
                        "p",
                        null,
                        "10 best Indian spice markets you need to visit!"
                      ),
                      React.createElement(
                        "a",
                        {
                          href: "#",
                        },
                        "Read More"
                      )
                    )
                  )
                ),
                React.createElement(
                  "div",
                  {
                    className: "mblexploreglry mblexploreglry2",
                  },
                  React.createElement(
                    "div",
                    {
                      className: "exploretext",
                    },
                    React.createElement("img", {
                      src: dynamicData.m_explore2,
                    }),
                    React.createElement(
                      "div",
                      {
                        className: "mblexploretext",
                      },
                      React.createElement(
                        "p",
                        null,
                        "Best time to visit Rajasthan?"
                      )
                    )
                  ),
                  React.createElement(
                    "div",
                    {
                      className: "exploretext",
                    },
                    React.createElement("img", {
                      src: dynamicData.m_explore3,
                    }),
                    React.createElement(
                      "div",
                      {
                        className: "mblexploretext mblexploretext2",
                      },
                      React.createElement(
                        "p",
                        null,
                        "5 Reasons why you should visit Kerala?"
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    ),
    React.createElement(
      "div",
      {
        className: "superbusjourney",
      },
      React.createElement(
        "div",
        {
          className: "superbuslogo",
        },
        React.createElement("img", {
          src: dynamicData.superbuslogo,
        })
      ),
      React.createElement(
        "div",
        {
          className: "journeybetter",
        },
        React.createElement(
          "div",
          {
            className: "container",
          },
          React.createElement(
            "div",
            {
              className: "journeycontent",
            },
            React.createElement("p", null, "#JourneyBetter ")
          )
        )
      )
    ),
    dlgMsg.open &&
      React.createElement(
        Dialog,
        {
          open: dlgMsg.open,
          TransitionComponent: Transition,
          keepMounted: true,
          maxWidth: "xl",
          onClose: handleClose,
          "aria-describedby": "alert-dialog-slide-description",
          className: "termsdatapart",
        },
        React.createElement(
          DialogContent,
          null,
          React.createElement(
            Suspense,
            null,
            React.createElement(MessagePopup, {
              Msg: dlgMsg,
              close: handleClose,
            })
          )
        )
      )
  );
};

const Header = (props) => {
  const { compDetails } = props;
  let [dlgtrmsMsg, setdlgtrmsMsg] = useState({
    open: false,
    msg: "",
  });
  let [userName, setUserName] = useState("");
  let [checkUserLogin, setCheckUserLogin] = useState(false);
  let [callPopup, setCallPopup] = useState(false);
  let [dlgMsg, setdlMsg] = useState({
    open: false,
    msg: "",
  });
  let [dlgMsg_login, setdlgMsg_login] = useState({
    open: false,
    msg: "",
  });
  let [callLogin, setCallLogin] = useState(false);
  let [myBookingObj, setMyBookingObj] = useState(0);
  let [custData, setCustData] = useState([]); //let [logedin, setLogedin] = useState(1);

  useEffect(() => {
    (async function () {
      await loadDataHeader();

      if (compDetails.companyData.userName != "") {
        setCheckUserLogin(true);
      }
    })();
  }, []);
  useEffect(() => {
    if (callPopup == true) {
      setdlgMsg_login({
        open: true,
        msg: "sucess",
      });
    }
  }, [callPopup]);

  const insertError = (error, dev_Name) => {
    const id = CreateNewDiv();
    const root1 = ReactDOM.createRoot(document.getElementById(id));
    root1.render(
      React.createElement(
        Suspense,
        null,
        React.createElement(ErrorLog, {
          CustomErrorObj: {
            errorObj: error,
            developerName: dev_Name,
          },
        })
      )
    );
    RemoveDiv(id);
  };

  const loadDataHeader = () => {
    try {
      jQuery(document).ready(function ($) {
        let activator = $("#activator");
        let navBg = $("#fade-bg");
        let ul = $("#activate-menu ul li");
        ul.on("click", function () {
          $(activator).toggleClass("active");
          $("#activate-menu").toggleClass("visible");
          navBg.fadeToggle();
        });
        activator.on("click", function () {
          $(this).toggleClass("active");
          $("#activate-menu").toggleClass("visible");
          navBg.fadeToggle();
        });
        navBg.on("click", function () {
          $("#activate-menu").removeClass("visible");
          $(activator).removeClass("active");
          $(this).hide();
        });
        let flag = 0;
      });
      $(document).ready(function () {
        let sideslider = $("[data-toggle=collapse-side]");
        let sel = sideslider.attr("data-target");
        let sel2 = sideslider.attr("data-target-2");
        sideslider.click(function (event) {
          $(sel).toggleClass("in");
          $(sel2).toggleClass("out");
        });
        $(".fixedbtn").on("click", function () {
          $(".fixedbtn").toggleClass("topfixedicon");
        });
        let navbar = $(".navbar-nav li");
        navbar.click(function (event) {
          $(".fixedbtn").trigger("click");
        });
      });
      var str = location.href.toLowerCase();

      if ("http://localhost:39395/#/" == str + "/#/") {
        $(".cssmenu ul li a");
      }

      $(".cssmenu ul li a").click(function () {
        $("li a").removeClass("active");
        $(this).addClass("active");
      });
      window.addEventListener("scroll", function () {
        var header = document.querySelector(".headerin");
      });
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    } finally {
      $(".isLoader").hide();
    }
  };

  const scroll = () => {
    try {
      _.autoScrollDown("VRL_Header", 100, 0);
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    } finally {
    }
  };

  const dynamicData = {
    img1:
      compDetails?.companyData?.CDNDataFolder +
      "/images/site/Logo.png?d=" +
      version,
    Header_Menu_BG:
      compDetails?.companyData?.CDNDataFolder +
      "/images/site/Header_Menu_BG.webp?d=" +
      version,
    logo:
      compDetails?.companyData?.CDNDataFolder + "/images/logo.svg?d=" + version,
  };

  const login_Click = async () => {
    try {
      await axios
        .post("/Web_Methods/OtherWebMethod.aspx/checkCustomerLogIn", {})
        .then(async (response) => {
          if (!response.data.d.isUrlExpired) {
            let data = await JSON.parse(response.data.d.data);

            if (data.status == 1) {
              alertBox_Main_Page(data.statusMessage);
              setCheckUserLogin(true);
            } else {
              setdlgtrmsMsg({
                open: true,
                msg: "",
              });
            }
          } else {
            alertBox_Main_Page("Something Went Wrong");
          }
        });
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    }
  };

  const logout_Click = async () => {
    try {
      await axios
        .post("/Web_Methods/OtherWebMethod.aspx/customerLogOut", {})
        .then(async (response) => {
          setCheckUserLogin(false);
          setCallPopup(false);
          dropdownclose();
        });
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    }
  };

  const handletrmsClose = () => {
    setdlgtrmsMsg({
      open: false,
      msg: "",
    });

    try {
      axios
        .post("/Web_Methods/OtherWebMethod.aspx/checkCustomerLogIn", {})
        .then(async (response) => {
          if (!response.data.d.isUrlExpired) {
            let data = await JSON.parse(response.data.d.data);

            if (data.status == 1) {
              setCheckUserLogin(true);
            }
          }
        });
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    }
  };

  const handleLoginData = (array) => {
    try {
      handletrmsClose();

      if (callPopup != true) {
        setTimeout(function () {
          setCallPopup(true);
        }, 600);
      }
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    }
  };

  const handleClose = () => {
    setdlMsg({
      open: false,
      msg: "",
      type: 0,
    });
  };

  const alertBox_Main_Page = (mesage, type) => {
    setdlMsg({
      open: true,
      msg: mesage,
      type: type,
    });
    React.createElement(
      Dialog,
      {
        open: dlgMsg.open,
        TransitionComponent: Transition,
        keepMounted: true,
        maxWidth: "xl",
        onClose: handleClose,
        "aria-describedby": "alert-dialog-slide-description",
        className: "termsdatapart",
      },
      React.createElement(
        DialogContent,
        null,
        React.createElement(
          Suspense,
          null,
          React.createElement(MessagePopup, {
            Msg: dlgMsg,
            close: handleClose,
          })
        )
      )
    );
  };

  const alertBox_2 = (mesage) => {
    setCallPopup(true);
  };

  const handleClose_2 = () => {
    setdlgMsg_login({
      open: false,
      msg: "",
    });
  };

  const callChildItem = (childfun) => {
    setCallLogin(childfun);
  };

  let login_Data = {
    close: handletrmsClose,
    sendLoginData: handleLoginData,
    callType: 1,
    termCondition: compDetails,

    /*callChildItem: callChildItem,*/
    rdrtMB: callLogin,
  };

  const LogoutName = (Name) => {
    setCheckUserLogin(true);
    setUserName(Name);
    compDetails.companyData.userName = Name;
  };

  const UpdateMsg = (mesage, type) => {
    setdlMsg({
      open: true,
      msg: mesage,
      type: type,
    });
  };

  let logoutdata = {
    close: LogoutName,
    UpdateMsg: UpdateMsg,
    send: myBookingObj, //send: _.random(123)
  };

  const set_custData = (data) => {
    setCustData(data);
  };

  let Backdetails = {
    custData: set_custData,
  };

  const MybookingCall = () => {
    scroll();
    setMyBookingObj(_.random(123));
  };

  const dropdownclose = () => {
    $("#dropdown").prop("checked", false);
    scroll();
  };

  function Loadhdr() {
    setTimeout(function () {
      setCallLogin(false);
    }, 1000);
  }

  return React.createElement(
    React.Fragment,
    null,
    React.createElement(
      "section",
      {
        className: "header",
        id: "VRL_Header",
      },
      React.createElement(
        "div",
        {
          className: "maxwidth",
        },
        React.createElement(
          "div",
          {
            className: "topheader",
          },
          React.createElement(
            "div",
            {
              className: "container-fluid",
            },
            React.createElement(
              "div",
              {
                className: "headercontent",
              },
              React.createElement(
                "div",
                {
                  className: "leftheader",
                },
                React.createElement(
                  Link,
                  {
                    to: "/",
                  },
                  React.createElement("img", {
                    src: dynamicData.logo,
                    alt: "Vijayanand Travels Travels",
                  })
                )
              ),
              React.createElement(
                "div",
                {
                  className: "rightheader",
                },
                React.createElement(
                  "div",
                  {
                    className: "headermenu",
                  },
                  React.createElement(
                    "div",
                    {
                      className: "menufixed",
                    },
                    React.createElement(
                      "div",
                      {
                        className: "navbar-header",
                      },
                      React.createElement(
                        "button",
                        {
                          "data-toggle": "collapse-side",
                          "data-target": ".side-collapse",
                          "data-target-2": ".side-collapse-container",
                          type: "button",
                          className: "navbar-toggle pull-left fixedbtn",
                        },
                        React.createElement("span", {
                          className: "icon-bar",
                        }),
                        React.createElement("span", {
                          className: "icon-bar",
                        }),
                        React.createElement("span", {
                          className: "icon-bar",
                        })
                      )
                    ),
                    React.createElement(
                      "div",
                      {
                        className: "navbar-inverse side-collapse in",
                      },
                      React.createElement(
                        "nav",
                        {
                          role: "navigation",
                          className: "navbar-collapse",
                        },
                        React.createElement("div", {
                          id: "cssmenu",
                          className: "cssmenu",
                          runat: "server",
                        }),
                        React.createElement(
                          "div",
                          {
                            className: "cssmenu",
                          },
                          React.createElement(
                            "ul",
                            {
                              className: "nav navbar-nav",
                            },
                            React.createElement(
                              "li",
                              {
                                id: "sendHome",
                              },
                              React.createElement(
                                Link,
                                {
                                  className: "homeicon",
                                  to: "/",
                                  onClick: scroll,
                                },
                                "Home"
                              )
                            ),
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                Link,
                                {
                                  className: "aboutus",
                                  to: "/AboutUS",
                                  onClick: scroll,
                                },
                                "About"
                              )
                            ),
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                Link,
                                {
                                  className: "contactus",
                                  to: "/ContactUs",
                                  onClick: scroll,
                                },
                                "Contact"
                              )
                            ),
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                Link,
                                {
                                  className: "help",
                                  to: "/FAQ",
                                  onClick: scroll,
                                },
                                "Help"
                              )
                            ),
                            React.createElement(
                              "li",
                              {
                                className: "afterfeedback",
                              },
                              React.createElement(
                                Link,
                                {
                                  className: "feedback",
                                  to: "/FeedbackVRL",
                                  onClick: scroll,
                                },
                                "Feedback"
                              )
                            )
                          ),
                          React.createElement(
                            "div",
                            {
                              className: "btnafterlogin",
                            },
                            React.createElement(
                              "ul",
                              {
                                className: "nav afternavbar navbar-nav",
                              },
                              React.createElement(
                                "li",
                                null,
                                React.createElement(
                                  "a",
                                  {
                                    onClick: (e) => {
                                      login_Click();
                                    },
                                  },
                                  "Profile"
                                )
                              ),
                              React.createElement(
                                "li",
                                null,
                                React.createElement(
                                  "a",
                                  {
                                    onClick: (e) => {
                                      login_Click();
                                    },
                                  },
                                  "Notification"
                                )
                              )
                            )
                          ),
                          checkUserLogin == false &&
                            React.createElement(
                              "div",
                              {
                                className: "aftersignupmobile",
                              },
                              React.createElement(
                                "p",
                                null,
                                "Sign in to avail exciting ",
                                React.createElement(
                                  "i",
                                  null,
                                  "discounts and cashbacks!"
                                )
                              ),
                              React.createElement(
                                "div",
                                {
                                  className: "signup signupmobile",
                                },
                                React.createElement(
                                  "a",
                                  {
                                    onClick: (e) => {
                                      login_Click();
                                    },
                                  },
                                  "Sign in / Sign up"
                                )
                              )
                            )
                        )
                      )
                    )
                  )
                ),
                checkUserLogin == true &&
                  React.createElement(
                    "div",
                    {
                      className: "sec-center",
                    },
                    React.createElement(
                      "div",
                      {
                        className: "accountmenu",
                      },
                      React.createElement(
                        "ul",
                        {
                          className: "nav afternavbar",
                        },
                        React.createElement(
                          "li",
                          null,
                          React.createElement(
                            Link,
                            {
                              className: "myprofile",
                              to: "/MyProfile",
                              onClick: scroll,
                            },
                            "My Account"
                          )
                        )
                      )
                    ),
                    React.createElement(
                      "div",
                      {
                        className: "thirdsec",
                      },
                      React.createElement(
                        "div",
                        {
                          className: "afterloginicon",
                        },
                        React.createElement("input", {
                          className: "dropdown",
                          type: "checkbox",
                          id: "dropdown",
                          name: "dropdown",
                        }),
                        React.createElement("label", {
                          className: "for-dropdown",
                          htmlFor: "dropdown",
                        }),
                        React.createElement(
                          "div",
                          {
                            className: "section-dropdown",
                          },
                          React.createElement(
                            "ul",
                            null,
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                Link,
                                {
                                  to: "/MyProfile",
                                  onClick: dropdownclose,
                                },
                                "My Profile"
                              )
                            ),
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                Link,
                                {
                                  to: "/MyBooking",
                                  onClick: dropdownclose,
                                },
                                "My Bookings"
                              )
                            ),
                            React.createElement(
                              "li",
                              {
                                className: "linktrackbus",
                              },
                              React.createElement(
                                "a",
                                {
                                  href: "http://maps.itspl.net/VRL/BusTracker.aspx",
                                  target: "_blank",
                                  onClick: dropdownclose,
                                },
                                "Track My Bus"
                              )
                            ),
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                Link,
                                {
                                  to: "/FeedbackVRL",
                                  onClick: dropdownclose,
                                },
                                "Feedback"
                              )
                            ),
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                Link,
                                {
                                  to: "/FAQ",
                                  onClick: dropdownclose,
                                },
                                "FAQs"
                              )
                            ),
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                Link,
                                {
                                  to: "/AboutUs",
                                  onClick: dropdownclose,
                                },
                                "About Us"
                              )
                            ),
                            React.createElement(
                              "li",
                              {
                                className: "linksignout",
                              },
                              React.createElement(
                                Link,
                                {
                                  to: "/",
                                  onClick: logout_Click,
                                },
                                "Sign Out"
                              )
                            )
                          )
                        )
                      )
                    ),
                    React.createElement(
                      "div",
                      {
                        className: "thirdsec",
                      },
                      React.createElement(
                        "div",
                        {
                          className: "afterloginicon02",
                        },
                        React.createElement("input", {
                          className: "dropdown02",
                          type: "checkbox",
                          id: "dropdown02",
                          name: "dropdown02",
                          onClick: dropdownclose,
                        }),
                        React.createElement("label", {
                          className: "for-dropdown",
                          htmlFor: "dropdown02",
                        })
                      )
                    )
                  ),
                checkUserLogin == false &&
                  React.createElement(
                    "div",
                    {
                      className: "signup",
                    },
                    React.createElement(
                      "a",
                      {
                        onClick: (e) => {
                          login_Click();
                        },
                      },
                      "Sign in / Sign up"
                    )
                  )
              )
            )
          )
        )
      )
    ),
    React.createElement(
      React.Fragment,
      null,
      React.createElement(
        Suspense,
        {
          fallback: React.createElement(
            "div",
            {
              className: "isLoader",
            },
            React.createElement("iframe", {
              src: "https://lottie.host/embed/114ba846-f491-4933-b858-2eccdb0734b9/RH0k7IklDQ.json",
            })
          ),
        },
        React.createElement(Route, {
          path: "/AboutUS",
          render: () =>
            React.createElement(AboutUS, {
              compDetails: compDetails,
            }),
        }),
        React.createElement(Route, {
          path: "/TermsAndConditions",
          render: () =>
            React.createElement(TermsAndConditions, {
              compDetails: compDetails,
            }),
        }),
        React.createElement(Route, {
          path: "/BusCharter",
          render: () =>
            React.createElement(BusCharter, {
              compDetails: compDetails,
            }),
        }),
        React.createElement(Route, {
          path: "/AvailbleRoutes",
          render: () =>
            React.createElement(AvailbleRoutes, {
              compDetails: compDetails,
            }),
        }),
        React.createElement(Route, {
          path: "/Customer_Info",
          render: () =>
            React.createElement(Customer_Info, {
              compDetails: compDetails,
            }),
        }),
        React.createElement(Route, {
          path: "/ETicket",
          render: () =>
            React.createElement(ETicket, {
              compDetails: compDetails,
            }),
        }),
        React.createElement(Route, {
          path: "/Information",
          render: () =>
            React.createElement(Information, {
              compDetails: compDetails,
            }),
        }),
        React.createElement(Route, {
          path: "/CancelStatus",
          render: () =>
            React.createElement(CancelStatus, {
              compDetails: compDetails,
            }),
        }),
        React.createElement(Route, {
          path: "/PaymentFailed",
          render: () =>
            React.createElement(PaymentFailed, {
              compDetails: compDetails,
            }),
        }),
        React.createElement(Route, {
          path: "/TranStatus",
          render: () =>
            React.createElement(TranStatus, {
              compDetails: compDetails,
            }),
        }),
        React.createElement(Route, {
          path: "/ModifyTicket",
          render: () =>
            React.createElement(ModifyTicket, {
              compDetails: compDetails,
            }),
        }),
        React.createElement(Route, {
          path: "/MyBooking",
          render: () =>
            React.createElement(MyBooking, {
              compDetails: compDetails,
              logout: logoutdata,
            }),
        }),
        React.createElement(Route, {
          path: "/AgentRegistration",
          render: () =>
            React.createElement(AgentRegistration, {
              compDetails: compDetails,
            }),
        }),
        React.createElement(Route, {
          path: "/PrivacyPolicy",
          render: () =>
            React.createElement(PrivacyPolicy, {
              compDetails: compDetails,
            }),
        }),
        React.createElement(Route, {
          path: "/Feedback",
          render: () =>
            React.createElement(Feedback, {
              compDetails: compDetails,
            }),
        }),
        React.createElement(Route, {
          path: "/ContactUS",
          render: () =>
            React.createElement(ContactUS, {
              compDetails: compDetails,
            }),
        }),
        React.createElement(Route, {
          path: "/PayOnline",
          render: () =>
            React.createElement(PayOnline, {
              compDetails: compDetails,
            }),
        }),
        React.createElement(Route, {
          path: "/Cancellation",
          render: () =>
            React.createElement(Cancellation, {
              compDetails: compDetails,
            }),
        }),
        React.createElement(Route, {
          path: "/RefundStatus",
          render: () =>
            React.createElement(RefundStatus, {
              compDetails: compDetails,
            }),
        }),
        React.createElement(Route, {
          path: "/Gallery",
          render: () =>
            React.createElement(Gallery, {
              compDetails: compDetails,
            }),
        }),
        React.createElement(Route, {
          path: "/FAQ",
          render: () =>
            React.createElement(FAQ, {
              compDetails: compDetails,
            }),
        }),
        React.createElement(Route, {
          path: "/Downloadapp",
          render: () =>
            React.createElement(Downloadapp, {
              compDetails: compDetails,
            }),
        }),
        React.createElement(Route, {
          path: "/GSTDetails",
          render: () =>
            React.createElement(GSTDetails, {
              compDetails: compDetails,
            }),
        }),
        React.createElement(Route, {
          path: "/CancellationAndRefundPolicy",
          render: () =>
            React.createElement(CancellationAndRefundPolicy, {
              compDetails: compDetails,
            }),
        }),
        React.createElement(Route, {
          path: "/Customer_Info_final",
          render: () =>
            React.createElement(Customer_Info_final, {
              compDetails: compDetails,
            }),
        }),
        React.createElement(Route, {
          path: "/MyProfile",
          render: () =>
            React.createElement(MyProfile, {
              compDetails: compDetails,
            }),
        }),
        React.createElement(Route, {
          path: "/QuickLinks",
          render: () =>
            React.createElement(QuickLinks, {
              compDetails: compDetails,
            }),
        }),
        React.createElement(Route, {
          path: "/Test",
          render: () =>
            React.createElement(Test, {
              compDetails: compDetails,
            }),
        }),
        React.createElement(Route, {
          path: "/Blog",
          render: () =>
            React.createElement(Blog, {
              compDetails: compDetails,
            }),
        }),
        React.createElement(Route, {
          path: "/BlogDetail",
          render: () =>
            React.createElement(BlogDetail, {
              compDetails: compDetails,
            }),
        }),
        React.createElement(Route, {
          path: "/ModifyPickup",
          render: () =>
            React.createElement(ModifyPickup, {
              compDetails: compDetails,
            }),
        }),
        React.createElement(Route, {
          path: "/FeedbackVRL",
          render: () =>
            React.createElement(FeedbackVRL, {
              compDetails: compDetails,
              logout: logoutdata,
            }),
        }),
        React.createElement(Route, {
          path: "/CancelTicket",
          render: () =>
            React.createElement(CancelTicket, {
              compDetails: compDetails,
            }),
        }),
        React.createElement(Route, {
          path: "/CancelDetails",
          render: () =>
            React.createElement(CancelDetails, {
              compDetails: compDetails,
            }),
        })
      )
    ),
    React.createElement(
      "div",
      null,
      dlgtrmsMsg.open &&
        React.createElement(
          Dialog,
          {
            open: dlgtrmsMsg.open,
            TransitionComponent: Transition,
            keepMounted: true,
            maxWidth: "xl",
            className: "login_popup_main",
            onClose: handletrmsClose,
            "aria-describedby": "alert-dialog-slide-description",
          },
          React.createElement(
            DialogContent,
            null,
            React.createElement(
              Suspense,
              null,
              React.createElement(Login, {
                loginData: login_Data,
              })
            )
          ),
          React.createElement(DialogActions, {
            className: "changepaaswrd",
          })
        )
    ),
    React.createElement(
      "div",
      null,
      dlgMsg.open &&
        React.createElement(
          Dialog,
          {
            open: dlgMsg.open,
            TransitionComponent: Transition,
            keepMounted: true,
            maxWidth: "xl",
            onClose: handleClose,
            "aria-describedby": "alert-dialog-slide-description",
            className: "termsdatapart",
          },
          React.createElement(
            DialogContent,
            null,
            React.createElement(
              Suspense,
              null,
              React.createElement(MessagePopup, {
                Msg: dlgMsg,
                close: handleClose,
              })
            )
          )
        ),
      dlgMsg_login.open &&
        React.createElement(Message_2, {
          Msg: dlgMsg_login,
          close: handleClose_2,
        })
    ),
    React.createElement(
      "div",
      {
        style: {
          display: "none",
        },
      },
      callLogin == true &&
        React.createElement(
          React.Fragment,
          null,
          React.createElement(
            Suspense,
            null,
            React.createElement(Login, {
              loginData: login_Data,
            })
          ),
          _.defer(() => {
            Loadhdr();
            return "";
          })
        )
    )
  );
};

const Footer = (props) => {
  const { compDetails } = props;
  let [dlgtrmsMsg, setdlgtrmsMsg] = useState({
    open: false,
    msg: "",
  });
  let [dlgMsg, setdlMsg] = useState({
    open: false,
    msg: "",
    type: 0,
  });
  let [callLogin, setCallLogin] = useState(false);
  useEffect(() => {
    (async function () {
      await loadDataFooter();
    })();
  }, []);

  const insertError = (error, dev_Name) => {
    const id = CreateNewDiv();
    const root1 = ReactDOM.createRoot(document.getElementById(id));
    root1.render(
      React.createElement(
        Suspense,
        null,
        React.createElement(ErrorLog, {
          CustomErrorObj: {
            errorObj: error,
            developerName: dev_Name,
          },
        })
      )
    );
    RemoveDiv(id);
  };

  let loadDataFooter = async () => {
    jQuery(".navfooter h4").click(function () {
      jQuery(this).parent(".nav02").toggleClass("open");
    });
  };

  const dynamicData = {
    img1:
      compDetails?.companyData?.CDNDataFolder +
      "/images/site/Logo.png?d=" +
      version,
    infilogo:
      compDetails?.companyData?.CDNDataFolder +
      "/images/INFINITY_Logo_Horizontal.png?d=" +
      version,
    google_play:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/google-play.png?d=" +
      version,
    google_app:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/google-app.png?d=" +
      version,
    appqr:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/appqr.png?d=" +
      version,
    logo:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/logo.svg?d=" +
      version,
    fgoogleplay:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/f-google-play.png?d=" +
      version,
    fgoogleapp:
      compDetails?.companyData?.CDNDataFolder +
      "/NewDesignImage/images/f-google-app.png?d=" +
      version,
  };

  const scroll = () => {
    try {
      _.autoScrollDown("VRL_Header", 100, 0);
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    } finally {
    }
  };

  const login_Click = async () => {
    try {
      await axios
        .post("/Web_Methods/OtherWebMethod.aspx/checkCustomerLogIn", {})
        .then(async (response) => {
          if (!response.data.d.isUrlExpired) {
            let data = await JSON.parse(response.data.d.data);

            if (data.status == 1) {
              alertBox_Main_Page(data.statusMessage, 3);
            } else {
              setdlgtrmsMsg({
                open: true,
                msg: "",
                type: 0,
              });
            }
          } else {
            alertBox_Main_Page("Something Went Wrong", 2);
          }
        });
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    }
  };

  const handletrmsClose = () => {
    setdlgtrmsMsg({
      open: false,
      msg: "",
    });
  };

  const handleLoginData = (array) => {
    try {
      handletrmsClose();
      setTimeout(function () {
        setCallLogin(true);
      }, 500);
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    }
  };

  const handleClose = () => {
    setdlMsg({
      open: false,
      msg: "",
      type: 0,
    });
  };

  const alertBox_Main_Page = (mesage, type) => {
    setdlMsg({
      open: true,
      msg: mesage,
      type: type,
    });
    React.createElement(
      Dialog,
      {
        open: dlgMsg.open,
        TransitionComponent: Transition,
        keepMounted: true,
        maxWidth: "xl",
        onClose: handleClose,
        "aria-describedby": "alert-dialog-slide-description",
        className: "termsdatapart",
      },
      React.createElement(
        DialogContent,
        null,
        React.createElement(
          Suspense,
          null,
          React.createElement(MessagePopup, {
            Msg: dlgMsg,
            close: handleClose,
          })
        )
      )
    );
  };

  let login_Data = {
    close: handletrmsClose,
    sendLoginData: handleLoginData,
    callType: 1,
    termCondition: compDetails,
    rdrtMB: callLogin,
  };

  function Loadhdr() {
    setTimeout(function () {
      setCallLogin(false);
    }, 1000);
  }

  return React.createElement(
    React.Fragment,
    null,
    React.createElement(
      "footer",
      null,
      React.createElement(
        "section",
        {
          className: "footer",
        },
        React.createElement(
          "div",
          {
            className: "maxwidth",
          },
          React.createElement(
            "div",
            {
              className: "downloadarea",
            },
            React.createElement(
              "div",
              {
                className: "container",
              },
              React.createElement(
                "div",
                {
                  className: "downloadpart",
                },
                React.createElement(
                  "div",
                  {
                    className: "downloadqrpart",
                  },
                  React.createElement(
                    "div",
                    {
                      className: "downloadapparea",
                    },
                    React.createElement("h3", null, "Download our App"),
                    React.createElement(
                      "div",
                      {
                        className: "downloadqr",
                      },
                      React.createElement("a", {
                        href: "https://play.google.com/store/apps/details?id=vrlbus.in.vrltravels&hl=en",
                        target: "_blank",
                      }),
                      React.createElement("a", {
                        href: "https://apps.apple.com/in/app/vrl-travels/id1222928053",
                        target: "_blank",
                        className: "downloadqrapp",
                      })
                    )
                  ),
                  React.createElement(
                    "div",
                    {
                      className: "downloadqrarea",
                    },
                    React.createElement("img", {
                      src: dynamicData.appqr,
                    })
                  )
                )
              )
            )
          ),
          React.createElement(
            "div",
            {
              className: "footerwrapper",
            },
            React.createElement(
              "div",
              {
                className: "topfooter",
              },
              React.createElement(
                "div",
                {
                  className: "footertoppart",
                },
                React.createElement(
                  "div",
                  {
                    className: "container",
                  },
                  React.createElement(
                    "div",
                    {
                      className: "socialpart",
                    },
                    React.createElement(
                      "div",
                      {
                        className: "footerlogo",
                      },
                      React.createElement(
                        "a",
                        {
                          href: "jacascript:void(0)",
                        },
                        React.createElement("img", {
                          src: dynamicData.logo,
                        })
                      )
                    ),
                    React.createElement(
                      "div",
                      {
                        className: "socialicon",
                      },
                      React.createElement(
                        "p",
                        null,
                        "Connect with us on social"
                      ),
                      React.createElement(
                        "a",
                        {
                          href: "https://www.facebook.com/VrlltdOfficial/",
                          target: "_blank",
                        },
                        React.createElement("i", {
                          className: "fa-brands fa-square-facebook",
                        })
                      ),
                      React.createElement(
                        "a",
                        {
                          href: "#",
                        },
                        React.createElement("i", {
                          className: "fa-brands fa-instagram",
                        })
                      ),
                      React.createElement(
                        "a",
                        {
                          href: "#",
                        },
                        React.createElement("i", {
                          className: "fa-brands fa-youtube",
                        })
                      ),
                      React.createElement(
                        "a",
                        {
                          href: "#",
                          className: "twitter",
                        },
                        React.createElement("i", {
                          className: "fa-brands fa-twitter",
                        })
                      )
                    )
                  ),
                  React.createElement(
                    "div",
                    {
                      className: "topfooterwrapper",
                    },
                    React.createElement(
                      "div",
                      {
                        className: "footernavmain",
                      },
                      React.createElement(
                        "div",
                        {
                          className: "navfooter",
                        },
                        React.createElement(
                          "div",
                          {
                            className: "navfooteritem nav02 col-sm-3",
                          },
                          React.createElement("h4", null, "Quick Links"),
                          React.createElement(
                            "ul",
                            null,
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                Link,
                                {
                                  to: "/AboutUS",
                                  onClick: scroll,
                                },
                                "About Us"
                              )
                            ),
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                Link,
                                {
                                  to: "/ContactUS",
                                  onClick: scroll,
                                },
                                "Contact Us"
                              )
                            ),
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                "a",
                                {
                                  href: "#",
                                },
                                "Mobile Version"
                              )
                            ),
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                Link,
                                {
                                  to: "/TermsAndConditions",
                                  onClick: scroll,
                                },
                                "Terms & Conditions"
                              )
                            ),
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                Link,
                                {
                                  to: "/PrivacyPolicy",
                                  onClick: scroll,
                                },
                                "Privacy Policy"
                              )
                            ),
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                Link,
                                {
                                  to: "/FAQ",
                                  onClick: scroll,
                                },
                                "FAQ"
                              )
                            ),
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                Link,
                                {
                                  to: "/TermsAndConditions",
                                  onClick: scroll,
                                },
                                "T&C apply"
                              )
                            ),
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                Link,
                                {
                                  to: "/QuickLinks",
                                  onClick: scroll,
                                },
                                "Quick Links"
                              )
                            ),
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                Link,
                                {
                                  to: "/Blog",
                                  onClick: scroll,
                                },
                                "Blogs"
                              )
                            )
                          )
                        )
                      ),
                      React.createElement(
                        "div",
                        {
                          className: "navfooter",
                        },
                        React.createElement(
                          "div",
                          {
                            className: "navfooteritem nav02 col-sm-3",
                          },
                          React.createElement("h4", null, "Services"),
                          React.createElement(
                            "ul",
                            null,
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                "a",
                                {
                                  href: "http://maps.itspl.net/VRL/BusTracker.aspx",
                                  target: "_blank",
                                },
                                "Track Bus"
                              )
                            ),
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                Link,
                                {
                                  to: "/BusCharter",
                                  onClick: scroll,
                                },
                                "Buses on Contract"
                              )
                            ),
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                Link,
                                {
                                  to: "/AgentRegistration",
                                  onClick: scroll,
                                },
                                "Agent Registration"
                              )
                            ),
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                Link,
                                {
                                  to: "/RefundStatus",
                                  onClick: scroll,
                                },
                                "Refund Status"
                              )
                            ),
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                Link,
                                {
                                  to: "/MyBooking",
                                  onClick: scroll,
                                },
                                "My Booking"
                              )
                            ),
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                Link,
                                {
                                  to: "/ModifyTicket",
                                  onClick: scroll,
                                },
                                "Modify Booking"
                              )
                            ),
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                Link,
                                {
                                  to: "/ModifyTicket",
                                  onClick: scroll,
                                },
                                "Cancellation"
                              )
                            ),
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                Link,
                                {
                                  to: "/FeedbackVRL",
                                  onClick: scroll,
                                },
                                "Complaints"
                              )
                            ),
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                Link,
                                {
                                  to: "/GSTDetails",
                                  onClick: scroll,
                                },
                                "GST Details"
                              )
                            ),
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                Link,
                                {
                                  to: "/BusCharter",
                                  onClick: scroll,
                                },
                                "Bus Charter"
                              )
                            ),
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                Link,
                                {
                                  to: "/FeedbackVRL",
                                  onClick: scroll,
                                },
                                "Feedback"
                              )
                            ),
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                "a",
                                {
                                  href: "https://icargo.itspl.net/TrackParcel_v2.aspx?q=demovt",
                                  target: "_blank",
                                },
                                "Track Parcel"
                              )
                            )
                          )
                        )
                      ),
                      React.createElement(
                        "div",
                        {
                          className: "navfooter navfooter03",
                        },
                        React.createElement(
                          "div",
                          {
                            className: "navfooteritem nav02 col-sm-3",
                          },
                          React.createElement("h4", null, "Login"),
                          React.createElement(
                            "ul",
                            null,
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                "a",
                                {
                                  onClick: (e) => {
                                    login_Click();
                                  },
                                },
                                "Customer login"
                              )
                            ),
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                "a",
                                {
                                  href: "http://agent.vrl.itspl.net",
                                  target: "_blank",
                                },
                                "Agent Login"
                              )
                            ),
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                "a",
                                {
                                  href: "http://office.vrl.itspl.net",
                                  target: "_blank",
                                },
                                "Branch Login"
                              )
                            )
                          )
                        ),
                        React.createElement(
                          "div",
                          {
                            className:
                              "navfooteritem navfooteritem2 nav02 col-sm-3",
                          },
                          React.createElement("h4", null, "Contact"),
                          React.createElement(
                            "ul",
                            null,
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                Link,
                                {
                                  to: "/ContactUS",
                                  onClick: scroll,
                                },
                                "Contact Us"
                              )
                            ),
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                Link,
                                {
                                  to: "/",
                                  onClick: scroll,
                                },
                                "Support"
                              )
                            ),
                            React.createElement(
                              "li",
                              null,
                              React.createElement(
                                Link,
                                {
                                  to: "/Help",
                                  onClick: scroll,
                                },
                                "Help"
                              )
                            )
                          )
                        )
                      )
                    ),
                    React.createElement(
                      "div",
                      {
                        className: "footeraddress",
                      },
                      React.createElement(
                        "div",
                        {
                          className: "addressbottom",
                        },
                        React.createElement(
                          "div",
                          {
                            className: "navfooter",
                          },
                          React.createElement(
                            "div",
                            {
                              className: "navfooteritem nav02 col-sm-3",
                            },
                            React.createElement("h4", null, "Corporate Office"),
                            React.createElement(
                              "ul",
                              null,
                              React.createElement(
                                "li",
                                null,
                                React.createElement(
                                  "p",
                                  null,
                                  "VIJAYANAND TRAVELS PVT.LTD. ",
                                  React.createElement(
                                    "i",
                                    null,
                                    "CTS NO.122/78A"
                                  ),
                                  " First Floor New Cotton Market, Hubballi - 580029 (Karnataka)"
                                ),
                                React.createElement(
                                  "p",
                                  null,
                                  "CIN NO: U60232KA2022PTC165724"
                                )
                              )
                            )
                          )
                        )
                      ),
                      React.createElement(
                        "div",
                        {
                          className: "footerapp",
                        },
                        React.createElement("h4", null, "Download our App"),
                        React.createElement(
                          "div",
                          {
                            className: "footerappbtn",
                          },
                          React.createElement("a", {
                            href: "https://play.google.com/store/apps/details?id=vrlbus.in.vrltravels&hl=en",
                            target: "_blank",
                          }),
                          React.createElement("a", {
                            href: "https://apps.apple.com/in/app/vrl-travels/id1222928053",
                            target: "_blank",
                            className: "footerapp02",
                          })
                        )
                      )
                    )
                  )
                )
              )
            ),
            React.createElement(
              "div",
              {
                className: "bottomfooter",
              },
              React.createElement(
                "div",
                {
                  className: "container",
                },
                React.createElement(
                  "div",
                  {
                    className: "footertravelslink",
                  },
                  React.createElement(
                    "p",
                    null,
                    "Copyrights ",
                    React.createElement(
                      "span",
                      null,
                      React.createElement(
                        "a",
                        {
                          href: "",
                        },
                        "Vijayanand Travels."
                      )
                    ),
                    " All rights reserved."
                  )
                )
              )
            )
          )
        )
      )
    ),
    React.createElement(
      "div",
      null,
      dlgtrmsMsg.open &&
        React.createElement(
          Dialog,
          {
            open: dlgtrmsMsg.open,
            TransitionComponent: Transition,
            keepMounted: true,
            maxWidth: "xl",
            className: "login_popup_main",
            onClose: handletrmsClose,
            "aria-describedby": "alert-dialog-slide-description",
          },
          React.createElement(
            DialogContent,
            null,
            React.createElement(
              Suspense,
              null,
              React.createElement(Login, {
                loginData: login_Data,
              })
            )
          ),
          React.createElement(DialogActions, {
            className: "changepaaswrd",
          })
        )
    ),
    React.createElement(
      "div",
      null,
      dlgMsg.open &&
        React.createElement(
          Dialog,
          {
            open: dlgMsg.open,
            TransitionComponent: Transition,
            keepMounted: true,
            maxWidth: "xl",
            onClose: handleClose,
            "aria-describedby": "alert-dialog-slide-description",
            className: "termsdatapart",
          },
          React.createElement(
            DialogContent,
            null,
            React.createElement(
              Suspense,
              null,
              React.createElement(MessagePopup, {
                Msg: dlgMsg,
                close: handleClose,
              })
            )
          )
        )
    ),
    React.createElement(
      "div",
      {
        style: {
          display: "none",
        },
      },
      callLogin == true &&
        React.createElement(
          React.Fragment,
          null,
          React.createElement(
            Suspense,
            null,
            React.createElement(Login, {
              loginData: login_Data,
            })
          ),
          _.defer(() => {
            Loadhdr();
            return "";
          })
        )
    )
  );
};

const Message_2 = (props) => {
  return React.createElement(
    React.Fragment,
    null,
    React.createElement(
      Snackbar,
      {
        open: props.Msg.open,
        autoHideDuration: 1600,
        onClose: props.close,
        className: "logintest",
        anchorOrigin: {
          horizontal: "center",
          vertical: "top",
        },
      },
      React.createElement(
        Alert,
        {
          onClose: props.close,
          severity: "error",
          sx: {
            width: "100%",
          },
        },
        React.createElement(
          "div",
          {
            className: "loginconfirmpopup",
          },
          React.createElement("h3", null, "Welcome to Vijayanand Travels"),
          React.createElement(
            "div",
            {
              className: "popupconfirmotp",
            },
            React.createElement("i", {
              className: "fa fa-check",
            })
          ),
          React.createElement(
            "p",
            null,
            "Discover Best Buses, Best Deal Only on ",
            React.createElement("i", null, "vrlbus.in")
          )
        )
      )
    )
  );
};

const Popup4 = (obj) => {
  const { close, images } = obj.popupData;
  useEffect(() => {
    (async function () {
      await loadDataindxpopup();
    })();
  }, []);

  const loadDataindxpopup = () => {
    try {
      $(document).ready(function () {
        let m = [
          "https://images.unsplash.com/photo-1485470733090-0aae1788d5af?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1391&q=80",
          "https://images.unsplash.com/photo-1491555103944-7c647fd857e6?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80",
          "https://images.unsplash.com/photo-1464822759023-fed622ff2c3b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80",
          "https://images.unsplash.com/photo-1472214103451-9374bd1c798e?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8NHx8bmF0dXJlfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=2160&q=90",
          "https://images.unsplash.com/photo-1469474968028-56623f02e42e?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8bmF0dXJlfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=2160&q=90",
          "https://images.unsplash.com/photo-1447752875215-b2761acb3c5d?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTR8fG5hdHVyZXxlbnwwfHwwfHw%3D&auto=format&fit=crop&w=2160&q=90",
          "https://images.unsplash.com/photo-1502082553048-f009c37129b9?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mjd8fG5hdHVyZXxlbnwwfHwwfHw%3D&auto=format&fit=crop&w=1350&q=80",
          "https://images.unsplash.com/photo-1552083375-1447ce886485?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8NTV8fG5hdHVyZXxlbnwwfHwwfHw%3D&auto=format&fit=crop&w=2160&q=90",
          "https://images.unsplash.com/photo-1426604966848-d7adac402bff?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80",
        ];

        if (images.length > 0) {
          for (let i = 0; i < images.length; i++) {
            if (i == 0) {
              $(
                '<div class ="carousel-item active"><img className="d-block" src="' +
                  images[i].Details +
                  '"/></div>'
              ).appendTo(".carousel-inner");
              $(
                '<button type="button" data-bs-target="#demopopup" data-bs-slide-to="' +
                  i +
                  '" class ="active">'
              ).appendTo(".carousel-indicators");
            } else {
              $(
                '<div class ="carousel-item"><img className="d-block" src="' +
                  images[i].Details +
                  '"/></div>'
              ).appendTo(".carousel-inner");
              $(
                '<button type="button" data-bs-target="#demopopup" data-bs-slide-to="' +
                  i +
                  '">'
              ).appendTo(".carousel-indicators");
            }
          }

          $("#demopopup").carousel();
          $("#largeModal").modal("show");
        }
      });
    } catch (error) {
      insertError(error, "Ruturajsinh Jadeja");
    } finally {
    }
  };

  return React.createElement(
    React.Fragment,
    null,
    React.createElement(
      "div",
      {
        className: "banner_modal",
      },
      React.createElement(
        "div",
        {
          className: "container",
        },
        React.createElement(
          "div",
          {
            className: "modal fade",
            id: "largeModal",
            tabIndex: "-1",
            role: "dialog",
            "aria-labelledby": "basicModal",
            "aria-hidden": "true",
          },
          React.createElement(
            "div",
            {
              className: "modal-dialog modal-lg",
            },
            React.createElement(
              "div",
              {
                className: "modal-content",
              },
              React.createElement("button", {
                type: "button",
                className: "btn-close",
                "data-bs-dismiss": "modal",
                onClick: close,
              }),
              React.createElement(
                "div",
                {
                  id: "demopopup",
                  className: "carousel slide",
                  "data-bs-ride": "carousel",
                },
                React.createElement("div", {
                  className: "carousel-indicators",
                }),
                React.createElement("div", {
                  className: "carousel-inner",
                }),
                React.createElement(
                  "button",
                  {
                    className: "carousel-control-prev",
                    type: "button",
                    "data-bs-target": "#demopopup",
                    "data-bs-slide": "prev",
                  },
                  React.createElement("span", {
                    className: "carousel-control-prev-icon",
                  })
                ),
                React.createElement(
                  "button",
                  {
                    className: "carousel-control-next",
                    type: "button",
                    "data-bs-target": "#demopopup",
                    "data-bs-slide": "next",
                  },
                  React.createElement("span", {
                    className: "carousel-control-next-icon",
                  })
                )
              )
            )
          )
        )
      )
    )
  );
};
